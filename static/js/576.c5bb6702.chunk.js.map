{"version":3,"file":"static/js/576.c5bb6702.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"formButton\":\"SearchBar_formButton__C-ydM\",\"input\":\"SearchBar_input__bIy50\"};","import { useState } from \"react\";\nimport css from './SearchBar.module.css'\nimport Notiflix from 'notiflix';\n\nexport const SearchBar = ({onSubmit}) => {\n    const [query, setQuery] = useState('')\n\n    const handleChange = (e) => {\n        setQuery(e.target.value)\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (!query) {\n        Notiflix.Notify.failure('Enter your search term')\n        return\n    }\n        onSubmit({query})\n    }\n\n  \n        return (\n            <header >\n                <form className={css.form} onSubmit={handleSubmit}>\n                    <button className={css.formButton} type=\"submit\">\n                    <span>Search</span>\n                    </button>\n                    <input\n                        className={css.input}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies\"\n                        onChange={handleChange}\n                        value={query}\n                    />\n                </form>\n            </header>\n        )\n}","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"title\":\"MoviesList_title__PB2c8\"};","import css from './MoviesList.module.css'\nimport {Link} from 'react-router-dom'\n\nexport const MoviesList = ({movies, location}) =>{\n\n    return (<ul className={css.moviesList}>\n        {movies ? movies.map(movie => {\n            return(\n             <Link key={movie.id} to={location.pathname === '/' ? `movies/${movie.id}`: `${movie.id}`} state={{from: location}}>\n                <li>\n                    <img src={movie.poster_path ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`: 'https://eticketsolutions.com/demo/themes/e-ticket/img/movie.jpg'} alt={movie.title}/>\n                </li>\n                {console.log(movies)}\n            </Link>)\n        }): <h1 className={css.title}>Search for Movies</h1>}\n    </ul>  )\n}\n\n\n","import { useState, useEffect} from \"react\"\nimport * as API from '../../services/movies-api'\nimport { SearchBar } from \"../../components/SearchBar/SearchBar\"\nimport {useSearchParams, useLocation} from 'react-router-dom'\nimport { MoviesList } from \"components/MoviesList/MoviesList\"\nimport Notiflix from 'notiflix';\n\nconst Movies = () =>{\n    const [searchResult, setSearchResult] = useState(null)\n    const location = useLocation()\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        const q = searchParams.get('q')\n        const getMovie = async () =>{\n           if(!q){\n            return\n           }\n               try{\n                   const fetchedMovie = await API.searchMovies(q)\n                   setSearchResult(fetchedMovie)\n                   console.log(\"Fetched\")\n               }\n               catch(error){Notiflix.Notify.failure('Error')}\n        }\n        getMovie()\n       }, [searchParams])\n\n    const formHandler = ({ query }) => {\n        setSearchParams({q: query})\n      }\n\n    \n    return ( \n        <div>\n            <SearchBar onSubmit={formHandler}/>\n            <MoviesList movies={searchResult} location={location}/> \n        </div>)\n}   \n\nexport default Movies\n\n","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'f331f91cb9692f1df13f3cba648b2743'\nconst TRAND_URL = '/trending/movie/day'\nconst TREND_TV = '/trending/tv/day'\n\nexport const getTrandMovies = async () => {\n    const response = await axios({ url: `${BASE_URL}${TRAND_URL}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data.results\n}\n\nexport const getTrendTV = async () => {\n    const response = await axios({ url: `${BASE_URL}${TREND_TV }?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data.results\n} \n\nexport const getMovieDetails = async(movieId, type) => {\n    const response = await axios({ url: `${BASE_URL}/movie/${movieId}${type}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data\n}\n\nexport const searchMovies = async(query) => {\n    const response = await axios({ url: `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`, method: \"GET\" })\n    return response.data.results\n}"],"names":["SearchBar","_ref","onSubmit","query","setQuery","useState","_jsx","children","_jsxs","className","css","e","preventDefault","Notiflix","failure","type","autoComplete","autoFocus","placeholder","onChange","target","value","MoviesList","movies","location","map","movie","Link","to","pathname","concat","id","state","from","src","poster_path","alt","title","console","log","Movies","searchResult","setSearchResult","useLocation","searchParams","setSearchParams","useSearchParams","useEffect","q","get","async","fetchedMovie","API","error","getMovie","BASE_URL","API_KEY","getTrandMovies","axios","url","method","data","results","getTrendTV","getMovieDetails","movieId","searchMovies"],"sourceRoot":""}