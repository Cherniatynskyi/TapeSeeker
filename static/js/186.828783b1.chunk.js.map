{"version":3,"file":"static/js/186.828783b1.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/DetailsComponents/DetailsHero/DetailsHero.module.css?5ffb","webpack://goit-react-hw-05-movies/./src/components/DetailsComponents/TrailerModal/TrailerModal.module.css?05a2","components/DetailsComponents/TrailerModal/TrailerModal.jsx","components/DetailsComponents/DetailsHero/DetailsHero.jsx","webpack://goit-react-hw-05-movies/./src/components/DetailsComponents/Cast/Cast.module.css?e060","components/DetailsComponents/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/DetailsComponents/DetailsInfo/DetailsInfo.module.css?45bf","components/DetailsComponents/DetailsInfo/VideosSlider.jsx","components/DetailsComponents/DetailsInfo/DetailsInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heroContainer\":\"DetailsHero_heroContainer__50wmX\",\"backButton\":\"DetailsHero_backButton__Q90zY\",\"poster\":\"DetailsHero_poster__oZuM+\",\"heroTextContainer\":\"DetailsHero_heroTextContainer__qujEh\",\"heroTitle\":\"DetailsHero_heroTitle__5Rcx6\",\"heroDesc\":\"DetailsHero_heroDesc__2g2fL\",\"heroNav\":\"DetailsHero_heroNav__NgCOw\",\"heroButton\":\"DetailsHero_heroButton__DSrXS\",\"heroOptions\":\"DetailsHero_heroOptions__bNZQm\",\"heroOptionItem\":\"DetailsHero_heroOptionItem__NUdnv\",\"companiesContainer\":\"DetailsHero_companiesContainer__yWnJN\",\"compLogos\":\"DetailsHero_compLogos__AV2uf\"};","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"TrailerModal_Overlay__Xpx18\",\"Modal\":\"TrailerModal_Modal__QlYNH\",\"closeButton\":\"TrailerModal_closeButton__STJ90\",\"closeIcon\":\"TrailerModal_closeIcon__yXPOS\",\"frameStyle\":\"TrailerModal_frameStyle__jmkOT\",\"modalCloseButton\":\"TrailerModal_modalCloseButton__KAl58\"};","import { useEffect, useRef } from 'react'\nimport css from './TrailerModal.module.css'\nimport { IoClose } from \"react-icons/io5\";\nimport { useLockBodyScroll } from \"@uidotdev/usehooks\";\n\n\nexport const TrailerModal = ({ onClose, movieVids}) => {\n\n    const firstRender = useRef(false)\n    const trailerUrl = movieVids?.results?.find(element => element.name.includes(\"Official Trailer\") || element.name.includes(\"Trailer\"))\n    useLockBodyScroll();\n\n    useEffect(() => {\n      if(firstRender.current === true){\n        window.addEventListener('keydown', handleKeyDown)\n      }\n\n      return () => {\n        firstRender.current = true\n        window.removeEventListener('keydown', handleKeyDown)\n      }\n    },)\n\n    const handleKeyDown = e => {\n            if (e.code === 'Escape') {  \n                onClose()              \n            }\n    }\n\n    const handleBackdropClick = e => {\n        if (e.target === e.currentTarget) {\n            onClose()\n        }\n    }\n\n    const handleButtonClose = ()=>{\n      onClose()\n    }\n\n        return (\n            <div className={css.Overlay} onClick={handleBackdropClick}>\n                <div className={css.Modal}>\n                    {trailerUrl ? \n                      <iframe className={css.frameStyle}  title={trailerUrl.name} allowFullScreen={true}\n                        src={`https://www.youtube.com/embed/${trailerUrl.key}`}>\n                      </iframe> : <div style={{color: \"white\", fontSize:\"4em\", paddingTop: \"80px\"}}>No trailers </div>\n                    } \n                    <button className={css.modalCloseButton} onClick={handleButtonClose}><IoClose color='white' size=\"4em\"/></button>\n                </div>\n            </div>\n        )\n}","import css from './DetailsHero.module.css'\nimport { Link } from 'react-router-dom'\nimport { FaCirclePlay } from \"react-icons/fa6\";\nimport { FaRegHeart } from \"react-icons/fa\";\nimport { FaRegClock } from \"react-icons/fa6\";\nimport { AiOutlineLike } from \"react-icons/ai\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\n\nimport { useRef, useState} from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { TrailerModal } from '../TrailerModal/TrailerModal';\n\n\nexport const DetailsHero = ({movie, movieVids})=>{\n    const location = useLocation()\n    const backLinkLocation = useRef(location.state?.from ?? '/')\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n      \n    const OpenModal = () =>{\n        setModalIsOpen(true)\n         \n      }\n  \n      const closeModal = () => {\n        setModalIsOpen(false)\n        \n     }\n\n    return(<>\n                    <div>\n                        {console.log(location)}\n                        {console.log(location.state)}\n                        \n                        <div className={css.heroContainer} style={{backgroundImage: `linear-gradient(0deg, #141414 10%, rgba(20, 20, 20, .7) 100%), url(\"https://image.tmdb.org/t/p/original${movie.backdrop_path}\")`}}>\n                            <Link className={css.backButton} to={backLinkLocation.current}><IoMdArrowRoundBack /> Back to movies</Link>\n                            <div className={css.posterWrap}>\n                                <img className={css.poster} src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"\" />\n                            </div>\n                            <div className={css.heroTextContainer}>\n                                <h2 className={css.heroTitle}>{movie.title ? movie.title : movie.name}</h2>\n                                <p className={css.heroDesc}>{movie.overview}</p>\n                                <div className={css.heroNav}>\n                                    < button onClick={OpenModal} className={css.heroButton}><FaCirclePlay size=\"1.2em\"/>View Trailer</button>\n                                    {modalIsOpen && <TrailerModal onClose={closeModal} movieVids={movieVids}></TrailerModal>}\n                                    <div className={css.heroOptions}>\n                                        <button className={css.heroOptionItem}><FaRegHeart className={css.heroIcon} size=\"1.3em\" /></button>\n                                        <button className={css.heroOptionItem}><FaRegClock className={css.heroIcon}  size=\"1.3em\" /></button>\n                                        <button className={css.heroOptionItem}><AiOutlineLike className={css.heroIcon}  size=\"1.3em\" /></button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={css.companiesContainer}>\n                                {movie.production_companies && movie.production_companies.map(comp =>{\n                                    return <img key={comp.id} className={css.compLogos} src={`https://image.tmdb.org/t/p/w300${comp.logo_path}`} alt=\"\" />\n                                })}\n                            </div>\n                        </div>\n                    </div>\n</>)\n}\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"slider\":\"Cast_slider__fdXul\",\"actorContainer\":\"Cast_actorContainer__6hdSw\",\"role\":\"Cast_role__9xrEk\",\"name\":\"Cast_name__XM+D+\",\"img\":\"Cast_img__D7ioB\"};","import { useParams } from \"react-router-dom\"\nimport { useState, useEffect, useRef } from \"react\"\nimport * as API from '../../../services/movies-api'\nimport Slider from \"react-slick\";\n\nimport css from './Cast.module.css'\n\n\nconst Cast = () =>{\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 5,\n        slidesToScroll: 3,\n        arrows: true,\n      };\n\n    const {movieId} = useParams()\n    const [cast, setCast] = useState(null)\n    const effectRun = useRef(true)\n\n    useEffect(() => {\n        const getMovie = async () =>{\n           if(effectRun.current){\n               \n               try{\n                   const fetchedMovie = await API.getMovieDetails(movieId, '/credits')\n                   setCast(fetchedMovie.cast)\n               }\n               catch(error){alert('error')}\n           }\n           effectRun.current = false\n        }\n        getMovie()\n       }, [movieId])\n\n    \n    return (<>\n            {cast &&\n            <div>\n                <Slider className={css.slider} {...settings}>\n                    {cast.map(actor => { \n                            return (\n                            <li className={css.actorContainer} key={actor.id}>\n                                <div>\n                                    <img className={css.img}  src={actor.profile_path ? `https://image.tmdb.org/t/p/w200${actor.profile_path}` : 'https://cdn.pixabay.com/photo/2016/04/01/10/11/avatar-1299805_1280.png'} alt={actor.name}/>\n                                    <p className={css.name} >{ actor.name.length > 14 ? actor.name.split(' ')[1] : actor.name}</p>\n                                    <p className={css.role} >{ actor.character.length > 14 ? actor.character.split(' ')[0] : actor.character}</p>\n                                </div>\n                            </li>)    \n                    })}\n                    </Slider>\n            </div>}\n            </>)\n}   \n\n\nexport default Cast\n","// extracted by mini-css-extract-plugin\nexport default {\"infoContainer\":\"DetailsInfo_infoContainer__drlhB\",\"mainInfo\":\"DetailsInfo_mainInfo__0bEF+\",\"mainInfoBox\":\"DetailsInfo_mainInfoBox__x5Fby\",\"castInfoBox\":\"DetailsInfo_castInfoBox__TXUEc\",\"articleInfo\":\"DetailsInfo_articleInfo__eEiCN\",\"itemsList\":\"DetailsInfo_itemsList__PWGJt\",\"itemWrap\":\"DetailsInfo_itemWrap__z2hrQ\",\"companiesList\":\"DetailsInfo_companiesList__wH9nw\",\"compWrap\":\"DetailsInfo_compWrap__2KlEh\",\"imgWrap\":\"DetailsInfo_imgWrap__CjUM6\",\"companyImg\":\"DetailsInfo_companyImg__-3E+H\",\"detailsYear\":\"DetailsInfo_detailsYear__GqXSg\",\"progressBar\":\"DetailsInfo_progressBar__HspgA\",\"VideoSliderWrap\":\"DetailsInfo_VideoSliderWrap__1gzGf\",\"frameStyle\":\"DetailsInfo_frameStyle__0DG7o\",\"slider\":\"DetailsInfo_slider__Ueag8\",\"reviewsLink\":\"DetailsInfo_reviewsLink__s4ezR\"};","\nimport Slider from \"react-slick\";\nimport css from './DetailsInfo.module.css'\n\n\n const VideosSlider = ({movieVids}) =>{\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        arrows: true,\n      };\n\n    \n    return (<>\n            {movieVids &&\n            <div>\n                <Slider className={css.slider} {...settings}>\n                    {movieVids?.results?.map(vid =>{\n                            return (\n                                <iframe className={css.frameStyle} key={vid.key} title={vid.name} allowFullScreen={true}\n                                    src={`https://www.youtube.com/embed/${vid.key}`}>\n                                </iframe>                      \n                            )\n                        })}\n                    </Slider>\n            </div>}\n            </>)\n}   \n\n\nexport default VideosSlider\n","import Cast from 'components/DetailsComponents/Cast/Cast'\nimport css from './DetailsInfo.module.css'\nimport { Link } from 'react-router-dom';\nimport { FaRegCalendar } from \"react-icons/fa6\";\nimport VideosSlider from './VideosSlider';\n\n\nexport const DetailsInfo = ({movie, movieVids}) =>{\n\n    const ratingBarStyle = {\n        background: \n            `radial-gradient(closest-side, #1A1A1A 79%, transparent 80% 100%), conic-gradient(rgb(243, 208, 86) ${movie.vote_average && movie.vote_average.toFixed(1) * 10}%, #2f2f2f 0)`\n    }\n    \n    return(\n        <div className={css.infoContainer}>\n            <div className={css.mainInfo}>\n                <div className={css.mainInfoBox}>\n                    <span>Description</span>\n                    <p>{movie.overview}</p>\n                </div>\n                <div className={`${css.mainInfoBox} ${css.castInfoBox}`}>\n                    <span>Cast</span>\n                    <Cast></Cast>\n                </div>\n                <div className={css.mainInfoBox}>\n                    <span>Videos</span>\n                    {console.log(movieVids)}\n                    <div className={css.VideoSliderWrap}>\n                        <VideosSlider movieVids={movieVids}></VideosSlider>\n                    </div>\n                  \n                    \n                </div>\n                <div className={css.mainInfoBox}>\n                    <span>Reviews</span>\n                    \n                    <Link className={css.reviewsLink} to='reviews'>Click to see reviews</Link>\n                    \n                </div>\n            </div>\n            <div className={css.articleInfo}>\n                <div className={css.articleBlock}>\n                    <p><FaRegCalendar /> Released year</p>\n                    <span className={css.detailsYear}>{ movie?.release_date && movie.release_date.split('-')[0]}</span>\n                </div>\n                <div className={css.articleBlock}>\n                    <p>Rating</p>\n                    <div>\n                        <div style ={ratingBarStyle} className={css.progressBar}>\n                            <span>{movie?.vote_average?.toFixed(1)}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className={css.articleBlock}>\n                    <p>genres</p>\n                    <ul className={css.itemsList}>\n                        {movie?.genres?.map(genre =>{\n                            return(\n                             <div key={genre.id} className={css.itemWrap}>\n                                {genre.name}\n                            </div>\n                        )})}\n                    </ul>\n                </div>\n                <div className={css.articleBlock}>\n                    <p>Languages</p>\n                    <ul className={css.itemsList}>\n                        {movie?.spoken_languages?.map(lang => {\n                            return(\n                                <div key={lang.name} className={css.itemWrap}>\n                                {lang.name}\n                                </div>\n                            )\n                        })}\n                    </ul>\n                </div>\n                <div className={css.articleBlock}>\n                    <p>Production studios</p>\n                    <ul className={css.companiesList}>\n                        {movie?.production_companies?.map(company => {\n                            return(\n                                <div key={company.id} className={`${css.itemWrap} ${css.compWrap}`}>\n                                     <span className={css.companyName}>{company.name}</span>\n                                    <div className={css.imgWrap}>\n                                        <img className={css.companyImg} src={company.logo_path ? `https://image.tmdb.org/t/p/w300${company.logo_path}` : `https://pic.onlinewebfonts.com/thumbnails/icons_360869.svg`} alt=\"\" />\n                                    </div>\n                                </div>         \n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}","import { useParams, Outlet } from 'react-router-dom'\nimport {useState, useEffect, useRef, Suspense} from 'react'\nimport * as API from '../../services/movies-api'\nimport Notiflix from 'notiflix';\n\nimport { DetailsHero } from '../../components/DetailsComponents/DetailsHero/DetailsHero';\nimport { DetailsInfo } from 'components/DetailsComponents/DetailsInfo/DetailsInfo';\n\nconst MovieDetails = () =>{\n\n    const [movie, setMovie] = useState({})\n    const [movieVids, setMovieVids] = useState({})\n    const {movieId} = useParams()\n    const effectRun = useRef(true)\n\n\n    useEffect(() => {\n        window.scrollTo({top: 0, left: 0});\n     const getMovie = async () =>{\n        if(effectRun.current){\n            effectRun.current = false\n            try{\n                const fetchedMovie = await API.getMovieDetails(movieId)\n                setMovie(fetchedMovie)\n\n                const movieVideos = await API.getMovieDetails(movieId, '/videos')\n                setMovieVids(movieVideos)\n            }\n            catch(error){Notiflix.Notify.failure('Error')}\n        }\n     }\n     getMovie()\n    }, [movieId])\n\n\n    return (\n        <>\n            <DetailsHero movie={movie} movieVids = {movieVids}/>    \n            <DetailsInfo movie={movie} movieVids = {movieVids}/>\n                <div>\n                    \n                </div>\n                <Suspense fallback={<div>Loading....</div>}>\n                    <Outlet/>\n                </Suspense>\n            \n        </>\n        \n    )\n}\n\nexport default MovieDetails\n\n"],"names":["TrailerModal","_ref","_movieVids$results","onClose","movieVids","firstRender","useRef","trailerUrl","results","find","element","name","includes","useLockBodyScroll","useEffect","current","window","addEventListener","handleKeyDown","removeEventListener","e","code","_jsx","className","css","onClick","target","currentTarget","children","_jsxs","title","allowFullScreen","src","concat","key","style","color","fontSize","paddingTop","handleButtonClose","IoClose","size","DetailsHero","_location$state$from","_location$state","movie","location","useLocation","backLinkLocation","state","from","modalIsOpen","setModalIsOpen","useState","_Fragment","console","log","heroContainer","backgroundImage","backdrop_path","Link","backButton","to","IoMdArrowRoundBack","posterWrap","poster","poster_path","alt","heroTextContainer","heroTitle","heroDesc","overview","heroNav","OpenModal","heroButton","FaCirclePlay","closeModal","heroOptions","heroOptionItem","FaRegHeart","heroIcon","FaRegClock","AiOutlineLike","companiesContainer","production_companies","map","comp","compLogos","logo_path","id","Cast","movieId","useParams","cast","setCast","effectRun","async","fetchedMovie","API","error","alert","getMovie","Slider","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","actor","profile_path","length","split","character","slider","vid","frameStyle","DetailsInfo","_movie$vote_average","_movie$genres","_movie$spoken_languag","_movie$production_com","ratingBarStyle","background","vote_average","toFixed","infoContainer","mainInfo","mainInfoBox","castInfoBox","VideoSliderWrap","VideosSlider","reviewsLink","articleInfo","articleBlock","FaRegCalendar","detailsYear","release_date","progressBar","itemsList","genres","genre","itemWrap","spoken_languages","lang","companiesList","company","compWrap","companyName","imgWrap","companyImg","MovieDetails","setMovie","setMovieVids","scrollTo","top","left","movieVideos","Notiflix","failure","Suspense","fallback","Outlet"],"sourceRoot":""}