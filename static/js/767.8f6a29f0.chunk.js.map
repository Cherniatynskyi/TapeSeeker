{"version":3,"file":"static/js/767.8f6a29f0.chunk.js","mappings":"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","sources":["webpack://tapeseeker/./src/components/Hero/Hero.module.css?07ff","components/Hero/Hero.jsx","webpack://tapeseeker/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heroContainer\":\"Hero_heroContainer__oJDVj\",\"heroTextContainer\":\"Hero_heroTextContainer__8eImd\",\"heroTitle\":\"Hero_heroTitle__edyX1\",\"heroDesc\":\"Hero_heroDesc__sdFGt\",\"heroNav\":\"Hero_heroNav__wlkhz\",\"heroButton\":\"Hero_heroButton__JV5aS\",\"heroOptions\":\"Hero_heroOptions__b-WBX\",\"heroOptionItem\":\"Hero_heroOptionItem__9FNUX\",\"slider\":\"Hero_slider__L0qTu\"};","import css from './Hero.module.css'\nimport { Link } from 'react-router-dom'\nimport { FaCirclePlay } from \"react-icons/fa6\";\nimport { FaRegHeart } from \"react-icons/fa\";\nimport { FaRegClock } from \"react-icons/fa6\";\nimport { AiOutlineLike } from \"react-icons/ai\";\nimport Slider from \"react-slick\";\n\nexport const Hero = ({movies})=>{\n    \n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        arrows: false,\n        autoplay: true,\n        autoplaySpeed: 9000,\n      };\n\n    return(<>\n  \n    <Slider className={css.slider} {...settings}>\n            {movies&& movies.map(movie =>{\n                return(\n                    <div key={movie.id}>\n                    <div className={css.heroContainer} style={{backgroundImage: `linear-gradient(0deg, #141414 10%, rgba(20, 20, 20, .3) 100%), url(\"https://image.tmdb.org/t/p/original${movie.backdrop_path}\")`}}>\n                        <div className={css.heroTextContainer}>\n                            <h2 className={css.heroTitle}>{movie.title ? movie.title : movie.name}</h2>\n                            <p className={css.heroDesc}>{movie.overview}</p>\n                            <div className={css.heroNav}>\n                                < Link className={css.heroButton} to={movie.title ? `/movies/${movie.id}` : `/tv/${movie.id}`}><FaCirclePlay size=\"1.2em\"/> Click to view</Link>\n                                <div className={css.heroOptions}>\n                                    <button className={css.heroOptionItem}><FaRegHeart className={css.heroIcon} size=\"1.3em\" /></button>\n                                    <button className={css.heroOptionItem}><FaRegClock className={css.heroIcon}  size=\"1.3em\" /></button>\n                                    <button className={css.heroOptionItem}><AiOutlineLike className={css.heroIcon}  size=\"1.3em\" /></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                )\n            })}\n    </Slider>\n</>)\n}\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contentPage\":\"HomePage_contentPage__htYwn\",\"sectionSign\":\"HomePage_sectionSign__NPiuf\",\"trendingTitle\":\"HomePage_trendingTitle__1AaoZ\",\"heroAddPosterContainer\":\"HomePage_heroAddPosterContainer__5UX--\",\"heroAddPoster\":\"HomePage_heroAddPoster__JEAij\",\"heroPosterTextContainer\":\"HomePage_heroPosterTextContainer__TdhXo\",\"posterButton\":\"HomePage_posterButton__938SI\"};","import * as API from '../../services/movies-api'\nimport {useState, useEffect, useRef} from 'react'\nimport Notiflix from 'notiflix';\nimport { Hero } from 'components/Hero/Hero'\nimport { MoviesSlider } from 'components/MoviesSlider/MoviesSlider';\nimport css from './HomePage.module.css'\n\n\nconst HomePage = () => {\n    const [trendAll, setTrendAll] = useState([])\n\n    const [trendMov, setTrendMov] = useState([])\n    const [upcMov, setUpcMov] = useState([])\n    const [topRatedMov, setTopRatedMov] = useState([])\n\n    const [trendTv, setTrendTv] = useState([])\n    const [airingTv, setAiringTv] = useState([])\n    const [topRatedTv, setTopRatedTv] = useState([])\n    const effectRun = useRef(true)\n\n    useEffect(() => {\n    window.scrollTo({top: 0, left: 0, behavior: \"smooth\"});\n     const getMoviesFunc = async () =>{\n        if(effectRun.current){\n            effectRun.current = false\n            try{\n                const trendingAll = await API.getMovies(\"/trending/all/day\")\n                setTrendAll(trendingAll)\n\n                const trendingMovies = await API.getMovies(\"/trending/movie/day\")\n                setTrendMov(trendingMovies)\n\n                const upcomingMov = await API.getMovies(\"/movie/upcoming\")\n                setUpcMov(upcomingMov)\n\n                const trMov = await API.getMovies(\"/movie/top_rated\")\n                setTopRatedMov(trMov)\n\n                const trendingTV = await API.getMovies(\"/trending/tv/day\")\n                setTrendTv(trendingTV)\n\n                const airTV = await API.getMovies(\"/tv/airing_today\")\n                setAiringTv(airTV)\n\n                const topTv = await API.getMovies(\"/tv/top_rated\")\n                setTopRatedTv(topTv)\n            }\n            catch(error){Notiflix.Notify.failure('Error')}\n        }\n     }\n     getMoviesFunc()\n    }, [])\n    \n   \n    return(\n        <>\n            <Hero movies={trendAll}/>\n            <div className={css.contentPage}>\n                <div className={css.sectionSign}>Movies</div>\n                <h2 className={css.trendingTitle}>Trending Movies now</h2>\n                <MoviesSlider  movies={trendMov} type='movies' />\n                <h2 className={css.trendingTitle}>Upcoming</h2>\n                <MoviesSlider  movies={upcMov} type='movies' />\n                <h2 className={css.trendingTitle}>Top Rated</h2>\n                <MoviesSlider  movies={topRatedMov} type='movies' />\n            </div>\n            <div className={css.contentPage}>\n                <div className={css.sectionSign}>TV Series</div>\n                <h2 className={css.trendingTitle}>Trending TV series now</h2>\n                <MoviesSlider  movies={trendTv} type='tv' />\n                <h2 className={css.trendingTitle}>Airing now</h2>\n                <MoviesSlider  movies={airingTv} type='tv' />\n                <h2 className={css.trendingTitle}>Top Rated Series</h2>\n                <MoviesSlider  movies={topRatedTv} type='tv' />\n            </div>  \n        </>\n    )\n}\n\nexport default HomePage"],"names":["Hero","_ref","movies","_jsx","_Fragment","children","Slider","className","css","slider","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","autoplay","autoplaySpeed","map","movie","heroContainer","style","backgroundImage","concat","backdrop_path","_jsxs","heroTextContainer","heroTitle","title","name","heroDesc","overview","heroNav","Link","heroButton","to","id","FaCirclePlay","size","heroOptions","heroOptionItem","FaRegHeart","heroIcon","FaRegClock","AiOutlineLike","HomePage","trendAll","setTrendAll","useState","trendMov","setTrendMov","upcMov","setUpcMov","topRatedMov","setTopRatedMov","trendTv","setTrendTv","airingTv","setAiringTv","topRatedTv","setTopRatedTv","effectRun","useRef","useEffect","window","scrollTo","top","left","behavior","async","current","trendingAll","API","trendingMovies","upcomingMov","trMov","trendingTV","airTV","topTv","error","Notiflix","failure","getMoviesFunc","MoviesSlider","type"],"sourceRoot":""}