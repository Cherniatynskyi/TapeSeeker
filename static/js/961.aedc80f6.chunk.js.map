{"version":3,"file":"static/js/961.aedc80f6.chunk.js","mappings":"0OAUA,MA+CA,EA/CqBA,KAEjB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,CAAC,IAC7BC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,CAAC,IACrCG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,KAC3C,QAACK,IAAWC,EAAAA,EAAAA,MAwBlB,OArBAC,EAAAA,EAAAA,YAAU,KACNC,OAAOC,SAAS,CAACC,IAAK,EAAGC,KAAM,IACjBC,WAEV,IACI,MAAMC,QAAqBC,EAAAA,GAAoBT,GAC/CN,EAASc,GAET,MAAME,QAAoBD,EAAAA,GAAoBT,EAAS,WACvDH,EAAaa,GAEb,MAAMC,QAAsBF,EAAAA,GAAoBT,EAAS,YACzDD,EAAgBY,EAAcC,QAClC,CACA,MAAMC,GAAOC,IAAAA,OAAgBC,QAAQ,QAAQ,GAGpDC,EAAU,GACR,CAAChB,KAIAiB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAAC5B,MAAOA,EAAOG,UAAaA,KAExCwB,EAAAA,EAAAA,KAACE,EAAAA,EAAW,CAAC7B,MAAOA,EAAOG,UAAaA,KACpCwB,EAAAA,EAAAA,KAACG,EAAAA,SAAQ,CAACC,UAAUJ,EAAAA,EAAAA,KAAA,OAAAD,SAAK,gBAAkBA,UACvCC,EAAAA,EAAAA,KAACK,EAAAA,GAAM,MAEdC,QAAQC,IAAI7B,EAAc,SAC3BmB,EAAAA,EAAAA,MAAA,OAAKW,UAAWC,EAAAA,EAAIC,eAAeX,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAAA,EAAIE,cAAcZ,SAAC,yBAClCC,EAAAA,EAAAA,KAACY,EAAAA,EAAY,CAACC,OAAQnC,EAAcoC,KAAK,gBAE9C,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useParams, Outlet } from 'react-router-dom'\nimport {useState, useEffect, Suspense} from 'react'\nimport { MoviesSlider } from 'components/MoviesSlider/MoviesSlider';\nimport * as API from '../../services/movies-api'\nimport Notiflix from 'notiflix';\nimport css from './MoviesDetails.module.css'\n\nimport { DetailsHero } from '../../components/DetailsComponents/DetailsHero/DetailsHero';\nimport { DetailsInfo } from 'components/DetailsComponents/DetailsInfo/DetailsInfo';\n\nconst MovieDetails = () =>{\n\n    const [movie, setMovie] = useState({})\n    const [movieVids, setMovieVids] = useState({})\n    const [movieSimilar, setMovieSimilar] = useState([])\n    const {movieId} = useParams()\n\n\n    useEffect(() => {\n        window.scrollTo({top: 0, left: 0});\n     const getMovie = async () =>{\n        \n            try{\n                const fetchedMovie = await API.getMovieDetails(movieId)\n                setMovie(fetchedMovie)\n\n                const movieVideos = await API.getMovieDetails(movieId, '/videos')\n                setMovieVids(movieVideos)\n\n                const movieSimilarF = await API.getMovieDetails(movieId, '/similar')\n                setMovieSimilar(movieSimilarF.results)\n            }\n            catch(error){Notiflix.Notify.failure('Error')}\n        \n     }\n     getMovie()\n    }, [movieId])\n\n\n    return (\n        <>\n            <DetailsHero movie={movie} movieVids = {movieVids}/>  \n           \n            <DetailsInfo movie={movie} movieVids = {movieVids}/>\n                <Suspense fallback={<div>Loading....</div>}>\n                    <Outlet/>\n                </Suspense>\n            {console.log(movieSimilar, \"AAAA\")}  \n            <div className={css.similarsSlider}>\n                <h3 className={css.similarsTitle}>You also might like</h3>\n                <MoviesSlider movies={movieSimilar} type='movies'/>\n            </div>\n        </>\n        \n    )\n}\n\nexport default MovieDetails\n\n"],"names":["MovieDetails","movie","setMovie","useState","movieVids","setMovieVids","movieSimilar","setMovieSimilar","movieId","useParams","useEffect","window","scrollTo","top","left","async","fetchedMovie","API","movieVideos","movieSimilarF","results","error","Notiflix","failure","getMovie","_jsxs","_Fragment","children","_jsx","DetailsHero","DetailsInfo","Suspense","fallback","Outlet","console","log","className","css","similarsSlider","similarsTitle","MoviesSlider","movies","type"],"sourceRoot":""}