{"version":3,"file":"static/js/168.fb2eed80.chunk.js","mappings":"iMACA,QAAmC,kCAAnC,EAAoF,8BAApF,EAA+H,4B,aCK/H,MAiCA,EAjCgBA,KACZ,MAAM,QAACC,IAAWC,EAAAA,EAAAA,OACXC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IACjCC,GAAYC,EAAAA,EAAAA,SAAO,GAgBzB,OAdAC,EAAAA,EAAAA,YAAU,KACWC,WACd,GAAGH,EAAUI,QAAQ,CACpBJ,EAAUI,SAAU,EACjB,IACI,MAAMC,QAAqBC,EAAAA,GAAoBX,EAAS,YACxDG,EAAWO,EAAaE,QAC5B,CACA,MAAMC,GAAOC,MAAM,QAAQ,CAC/B,GAEHC,EAAU,GACR,CAACf,KAGHgB,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAqBF,SACZ,IAAnBf,EAAQkB,OAAelB,EAAQmB,KAAIC,IACzBC,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACHD,EAAAA,EAAAA,KAAA,KAAGE,UAAWC,EAAiBF,SAAEK,EAAOE,UACxCR,EAAAA,EAAAA,KAAA,KAAGE,UAAWC,EAAeF,SAAA,GAAAQ,OAAKH,EAAOI,aAF7BJ,EAAOK,OAIvBX,EAAAA,EAAAA,KAAA,KAAAC,SAAG,sBAET,C,mECjCd,MAAMW,EAAW,+BACXC,EAAU,mCAGHC,EAAiBtB,gBACHuB,EAAAA,EAAAA,GAAM,CAAEC,IAAI,GAADP,OAAKG,GAAQH,OAHjC,oBAG6C,aAAAA,OAAYI,GAAWI,OAAQ,SAC1EC,KAAKtB,QAGZuB,EAAkB3B,MAAMR,EAASoC,WACnBL,EAAAA,EAAAA,GAAM,CAAEC,IAAI,GAADP,OAAKG,EAAQ,WAAAH,OAAUzB,GAAOyB,OAAGW,EAAI,aAAAX,OAAYI,GAAWI,OAAQ,SACtFC,KAGPG,EAAe7B,gBACDuB,EAAAA,EAAAA,GAAM,CAAEC,IAAI,GAADP,OAAKG,EAAQ,0BAAAH,OAAyBI,EAAO,WAAAJ,OAAUa,GAASL,OAAQ,SAC1FC,KAAKtB,O","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__bHfUv\",\"reviewAuthor\":\"Reviews_reviewAuthor__f4lkL\",\"reviewText\":\"Reviews_reviewText__lxUoA\"};","import { useParams } from \"react-router-dom\"\nimport { useState, useEffect, useRef } from \"react\"\nimport * as API from '../../services/movies-api'\nimport css from './Reviews.module.css'\n\n\nconst Reviews = () =>{\n    const {movieId} = useParams()\n    const [reviews, setReviews] = useState([])\n    const effectRun = useRef(true)\n\n    useEffect(() => {\n        const getMovie = async () =>{\n           if(effectRun.current){\n            effectRun.current = false\n               try{\n                   const fetchedMovie = await API.getMovieDetails(movieId, '/reviews')\n                   setReviews(fetchedMovie.results)\n               }\n               catch(error){alert('error')}\n           }\n        }\n        getMovie()\n       }, [movieId])\n\n    return (\n        <div>\n            <ul className={css.reviewsContainer}>\n                {reviews.length !== 0 ? reviews.map(review => {\n                    return(<li key={review.id}>\n                        <p className={css.reviewAuthor}>{review.author}</p>\n                        <p className={css.reviewText}>{`${review.content}`}</p>\n                    </li>)\n                }): <p>No reviews yet</p>}\n            </ul>\n        </div>\n    )\n}   \n\nexport default Reviews","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'f331f91cb9692f1df13f3cba648b2743'\nconst TRAND_URL = '/trending/all/day'\n\nexport const getTrandMovies = async () => {\n    const response = await axios({ url: `${BASE_URL}${TRAND_URL}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data.results\n}\n\nexport const getMovieDetails = async(movieId, type) => {\n    const response = await axios({ url: `${BASE_URL}/movie/${movieId}${type}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data\n}\n\nexport const searchMovies = async(query) => {\n    const response = await axios({ url: `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`, method: \"GET\" })\n    return response.data.results\n}"],"names":["Reviews","movieId","useParams","reviews","setReviews","useState","effectRun","useRef","useEffect","async","current","fetchedMovie","API","results","error","alert","getMovie","_jsx","children","className","css","length","map","review","_jsxs","author","concat","content","id","BASE_URL","API_KEY","getTrandMovies","axios","url","method","data","getMovieDetails","type","searchMovies","query"],"sourceRoot":""}