{"version":3,"file":"static/js/729.f4979b90.chunk.js","mappings":"iJACA,QAA6B,+BAA7B,EAAoE,0B,qBCE7D,MAAMA,EAAaC,IAAwB,IAAvB,OAACC,EAAM,SAAEC,GAASF,EAEzC,OAAQG,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAeC,SACjCL,EAASA,EAAOM,KAAIC,IAEhBL,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAAgBC,GAA0B,MAAtBR,EAASS,SAAgB,UAAAC,OAAaJ,EAAMK,IAAE,GAAAD,OAAOJ,EAAMK,IAAMC,MAAO,CAACC,KAAMb,GAAUI,UAC/GH,EAAAA,EAAAA,KAAA,MAAAG,UACIH,EAAAA,EAAAA,KAAA,OAAKa,IAAKR,EAAMS,YAAW,kCAAAL,OAAqCJ,EAAMS,aAAe,kEAAmEC,IAAKV,EAAMW,WAF/JX,EAAMK,OAKlBV,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAUC,SAAC,uBAC7B,C,oECbT,QAAuB,wBAAvB,EAA4D,8BAA5D,EAAkG,yB,+BCG3F,MAAMc,EAAYpB,IAAiB,IAAhB,SAACqB,GAASrB,EAChC,MAAOsB,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAiB/B,OACIrB,EAAAA,EAAAA,KAAA,UAAAG,UACImB,EAAAA,EAAAA,MAAA,QAAMrB,UAAWC,EAAUgB,SAZjBK,IAClBA,EAAEC,iBACGL,EAILD,EAAS,CAACC,UAHVM,IAAAA,OAAgBC,QAAQ,yBAGP,EAMyCvB,SAAA,EAC9CH,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAgByB,KAAK,SAAQxB,UAChDH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,cAENH,EAAAA,EAAAA,KAAA,SACIC,UAAWC,EACXyB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SA3BER,IAClBH,EAASG,EAAES,OAAOC,MAAM,EA2BRA,MAAOd,QAGV,E,8BC/BrB,MAoCA,EApCee,KACX,MAAOC,EAAcC,IAAmBf,EAAAA,EAAAA,UAAS,MAC3CgB,GAAYC,EAAAA,EAAAA,SAAO,GACnBvC,GAAWwC,EAAAA,EAAAA,OACVC,EAAcC,IAAmBC,EAAAA,EAAAA,OAExCC,EAAAA,EAAAA,YAAU,KACWC,WACd,GAAGP,EAAUQ,QAAQ,CACpB,MAAMC,EAAIN,EAAaO,IAAI,KACxB,IACK,GAAQ,MAALD,EACC,OAEL,MAAME,QAAqBC,EAAAA,GAAiBH,GAC5CV,EAAgBY,EACpB,CACA,MAAME,GAAOzB,IAAAA,OAAgBC,QAAQ,QAAQ,CACjD,CACAW,EAAUQ,SAAU,CAAI,EAE3BM,EAAU,GACR,CAACX,IAOP,OACIlB,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,EACIH,EAAAA,EAAAA,KAACiB,EAAS,CAACC,SAPCrB,IAAgB,IAAf,MAAEsB,GAAOtB,EAC1B4C,EAAgB,CAACK,EAAG3B,GAAO,KAOvBnB,EAAAA,EAAAA,KAACJ,EAAAA,EAAU,CAACE,OAAQqC,EAAcpC,SAAUA,MAC1C,C,iECtCd,MAAMqD,EAAW,+BACXC,EAAU,mCAGHC,EAAiBV,gBACHW,EAAAA,EAAAA,GAAM,CAAEC,IAAI,GAAD/C,OAAK2C,GAAQ3C,OAHjC,oBAG6C,aAAAA,OAAY4C,GAAWI,OAAQ,SAC1EC,KAAKC,QAGZC,EAAkBhB,MAAMiB,EAASlC,WACnB4B,EAAAA,EAAAA,GAAM,CAAEC,IAAI,GAAD/C,OAAK2C,EAAQ,WAAA3C,OAAUoD,GAAOpD,OAAGkB,EAAI,aAAAlB,OAAY4C,GAAWI,OAAQ,SACtFC,KAGPI,EAAelB,gBACDW,EAAAA,EAAAA,GAAM,CAAEC,IAAI,GAAD/C,OAAK2C,EAAQ,0BAAA3C,OAAyB4C,EAAO,WAAA5C,OAAUU,GAASsC,OAAQ,SAC1FC,KAAKC,O","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"title\":\"MoviesList_title__PB2c8\"};","import css from './MoviesList.module.css'\nimport {Link} from 'react-router-dom'\n\nexport const MoviesList = ({movies, location}) =>{\n\n    return (<ul className={css.moviesList}>\n        {movies ? movies.map(movie => {\n            return(\n             <Link key={movie.id} to={location.pathname === '/' ? `movies/${movie.id}`: `${movie.id}`} state={{from: location}}>\n                <li>\n                    <img src={movie.poster_path ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`: 'https://eticketsolutions.com/demo/themes/e-ticket/img/movie.jpg'} alt={movie.title}/>\n                </li>\n            </Link>)\n        }): <h1 className={css.title}>Search for Movies</h1>}\n    </ul>  )\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"formButton\":\"SearchBar_formButton__C-ydM\",\"input\":\"SearchBar_input__bIy50\"};","import { useState } from \"react\";\nimport css from './SearchBar.module.css'\nimport Notiflix from 'notiflix';\n\nexport const SearchBar = ({onSubmit}) => {\n    const [query, setQuery] = useState('')\n\n    const handleChange = (e) => {\n        setQuery(e.target.value)\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (!query) {\n        Notiflix.Notify.failure('Enter your search term')\n        return\n    }\n        onSubmit({query})\n    }\n\n  \n        return (\n            <header >\n                <form className={css.form} onSubmit={handleSubmit}>\n                    <button className={css.formButton} type=\"submit\">\n                    <span>Search</span>\n                    </button>\n                    <input\n                        className={css.input}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies\"\n                        onChange={handleChange}\n                        value={query}\n                    />\n                </form>\n            </header>\n        )\n}","import { useState, useEffect, useRef} from \"react\"\nimport * as API from '../../services/movies-api'\nimport { SearchBar } from \"../../components/SearchBar/SearchBar\"\nimport {useSearchParams, useLocation} from 'react-router-dom'\nimport { MoviesList } from \"components/MoviesList/MoviesList\"\nimport Notiflix from 'notiflix';\n\nconst Movies = () =>{\n    const [searchResult, setSearchResult] = useState(null)\n    const effectRun = useRef(false)\n    const location = useLocation()\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        const getMovie = async () =>{\n           if(effectRun.current){\n            const q = searchParams.get('q')\n               try{\n                    if(q == null){\n                        return\n                    }\n                   const fetchedMovie = await API.searchMovies(q)\n                   setSearchResult(fetchedMovie)\n               }\n               catch(error){Notiflix.Notify.failure('Error')}\n           }\n           effectRun.current = true\n        }\n        getMovie()\n       }, [searchParams])\n\n    const formHandler = ({ query }) => {\n        setSearchParams({q: query})\n      }\n\n    \n    return ( \n        <div>\n            <SearchBar onSubmit={formHandler}/>\n            <MoviesList movies={searchResult} location={location}/> \n        </div>)\n}   \n\nexport default Movies\n\n","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'f331f91cb9692f1df13f3cba648b2743'\nconst TRAND_URL = '/trending/all/day'\n\nexport const getTrandMovies = async () => {\n    const response = await axios({ url: `${BASE_URL}${TRAND_URL}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data.results\n}\n\nexport const getMovieDetails = async(movieId, type) => {\n    const response = await axios({ url: `${BASE_URL}/movie/${movieId}${type}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data\n}\n\nexport const searchMovies = async(query) => {\n    const response = await axios({ url: `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`, method: \"GET\" })\n    return response.data.results\n}"],"names":["MoviesList","_ref","movies","location","_jsx","className","css","children","map","movie","Link","to","pathname","concat","id","state","from","src","poster_path","alt","title","SearchBar","onSubmit","query","setQuery","useState","_jsxs","e","preventDefault","Notiflix","failure","type","autoComplete","autoFocus","placeholder","onChange","target","value","Movies","searchResult","setSearchResult","effectRun","useRef","useLocation","searchParams","setSearchParams","useSearchParams","useEffect","async","current","q","get","fetchedMovie","API","error","getMovie","BASE_URL","API_KEY","getTrandMovies","axios","url","method","data","results","getMovieDetails","movieId","searchMovies"],"sourceRoot":""}