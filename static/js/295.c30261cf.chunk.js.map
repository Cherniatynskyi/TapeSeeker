{"version":3,"file":"static/js/295.c30261cf.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Hero/Hero.module.css?07ff","components/Hero/Hero.jsx","webpack://goit-react-hw-05-movies/./src/components/TrendingSlider/TrendingMovies.module.css?e360","components/TrendingSlider/TrendingSlider.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heroContainer\":\"Hero_heroContainer__oJDVj\",\"heroTextContainer\":\"Hero_heroTextContainer__8eImd\",\"heroTitle\":\"Hero_heroTitle__edyX1\",\"heroDesc\":\"Hero_heroDesc__sdFGt\",\"heroNav\":\"Hero_heroNav__wlkhz\",\"heroButton\":\"Hero_heroButton__JV5aS\",\"heroOptions\":\"Hero_heroOptions__b-WBX\",\"heroOptionItem\":\"Hero_heroOptionItem__9FNUX\",\"slider\":\"Hero_slider__L0qTu\"};","import css from './Hero.module.css'\nimport { Link } from 'react-router-dom'\nimport { FaCirclePlay } from \"react-icons/fa6\";\nimport { FaRegHeart } from \"react-icons/fa\";\nimport { FaRegClock } from \"react-icons/fa6\";\nimport { AiOutlineLike } from \"react-icons/ai\";\nimport Slider from \"react-slick\";\n\nexport const Hero = ({movies})=>{\n    \n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        arrows: false,\n        autoplay: true,\n        autoplaySpeed: 9000,\n      };\n\n    return(<>\n  \n    <Slider className={css.slider} {...settings}>\n            {movies&& movies.map(movie =>{\n                return(\n                    <div key={movie.id}>\n                    <div className={css.heroContainer} style={{backgroundImage: `linear-gradient(0deg, #141414 10%, rgba(20, 20, 20, .3) 100%), url(\"https://image.tmdb.org/t/p/original${movie.backdrop_path}\")`}}>\n                        <div className={css.heroTextContainer}>\n                            <h2 className={css.heroTitle}>{movie.title ? movie.title : movie.name}</h2>\n                            <p className={css.heroDesc}>{movie.overview}</p>\n                            <div className={css.heroNav}>\n                                < Link className={css.heroButton} to={`/movies/${movie.id}`}><FaCirclePlay size=\"1.2em\"/> Click to view</Link>\n                                <div className={css.heroOptions}>\n                                    <button className={css.heroOptionItem}><FaRegHeart className={css.heroIcon} size=\"1.3em\" /></button>\n                                    <button className={css.heroOptionItem}><FaRegClock className={css.heroIcon}  size=\"1.3em\" /></button>\n                                    <button className={css.heroOptionItem}><AiOutlineLike className={css.heroIcon}  size=\"1.3em\" /></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                )\n            })}\n    </Slider>\n</>)\n}\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"TrendingMovies_link__Q5N+U\",\"trendingItem\":\"TrendingMovies_trendingItem__MfLSm\",\"trendingItemContainer\":\"TrendingMovies_trendingItemContainer__QmW17\",\"thumbsContainer\":\"TrendingMovies_thumbsContainer__ESmi2\",\"slider\":\"TrendingMovies_slider__p2DFH\"};","import Slider from \"react-slick\";\nimport css from './TrendingMovies.module.css'\nimport { CiCalendarDate } from \"react-icons/ci\";\nimport { MdStar } from \"react-icons/md\";\nimport { Link } from \"react-router-dom\";\nimport { MdLanguage } from \"react-icons/md\";\n\n\n\n\nexport const TrendingSlider = ({movies}) =>{\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 5,\n        slidesToScroll: 5,\n        arrows: true,\n      };\n    return(\n        <div>\n            <Slider className={css.slider} {...settings}>\n                {movies.map(movie =>{\n                    if(movie.release_date){\n                        var splitted = movie.release_date.split(\"-\")   \n                    }\n                    return(\n                        <Link key={movie.id} className={css.link} to={`/movies/${movie.id}`}>\n                        <div className={css.trendingItem}>\n                            <div className={css.trendingItemContainer}>\n                                <img src={movie.poster_path ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`: 'https://eticketsolutions.com/demo/themes/e-ticket/img/movie.jpg'} alt={movie.title}/>\n                                <div className={css.thumbsContainer}>\n                                    <span> <CiCalendarDate size=\"1.2em\" /> {splitted ? splitted[0] : '2023'}</span>\n                                    <span> <MdStar size=\"1.2em\" />{movie.vote_average.toFixed(1)}</span>\n                                    <span> <MdLanguage size=\"1.2em\" />{movie.original_language}</span>\n                                </div>\n                            </div>\n                        </div>\n                        </Link>\n                    )\n                })}\n            </Slider>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"contentPage\":\"HomePage_contentPage__htYwn\",\"sectionSign\":\"HomePage_sectionSign__NPiuf\",\"trendingTitle\":\"HomePage_trendingTitle__1AaoZ\"};","import * as API from '../../services/movies-api'\nimport {useState, useEffect, useRef} from 'react'\nimport Notiflix from 'notiflix';\nimport { Hero } from 'components/Hero/Hero'\nimport { TrendingSlider } from 'components/TrendingSlider/TrendingSlider';\nimport css from './HomePage.module.css'\n\n\nconst HomePage = () => {\n\n    const [movies, setMovies] = useState([])\n    const [trendTV, setTrendTv] = useState([])\n    const effectRun = useRef(true)\n\n    useEffect(() => {\n     const getMovies = async () =>{\n        if(effectRun.current){\n            effectRun.current = false\n            try{\n                const fetchedMovies = await API.getTrandMovies()\n                setMovies(fetchedMovies)\n\n                const fetchedTV = await API.getTrendTV()\n                setTrendTv(fetchedTV)\n            }\n            catch(error){Notiflix.Notify.failure('Error')}\n        }\n     }\n     getMovies()\n    }, [])\n    \n   \n    return(\n        <>\n            <Hero movies={movies}/>\n            <div className={css.contentPage}>\n                <div className={css.sectionSign}>Movies</div>\n                <h2 className={css.trendingTitle}>Trending Movies now</h2>\n                <TrendingSlider movies={movies} />\n                <h2 className={css.trendingTitle}>Trending TV series now</h2>\n                <TrendingSlider movies={trendTV} />\n            </div>\n            \n        </>\n    )\n}\n\nexport default HomePage","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'f331f91cb9692f1df13f3cba648b2743'\nconst TRAND_URL = '/trending/movie/day'\nconst TREND_TV = '/trending/tv/day'\n\nexport const getTrandMovies = async () => {\n    const response = await axios({ url: `${BASE_URL}${TRAND_URL}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data.results\n}\n\nexport const getTrendTV = async () => {\n    const response = await axios({ url: `${BASE_URL}${TREND_TV }?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data.results\n} \n\nexport const getMovieDetails = async(movieId, type) => {\n    const response = await axios({ url: `${BASE_URL}/movie/${movieId}${type}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data\n}\n\nexport const searchMovies = async(query) => {\n    const response = await axios({ url: `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`, method: \"GET\" })\n    return response.data.results\n}"],"names":["Hero","_ref","movies","_jsx","_Fragment","children","Slider","className","css","slider","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","autoplay","autoplaySpeed","map","movie","heroContainer","style","backgroundImage","concat","backdrop_path","_jsxs","heroTextContainer","heroTitle","title","name","heroDesc","overview","heroNav","Link","heroButton","to","id","FaCirclePlay","size","heroOptions","heroOptionItem","FaRegHeart","heroIcon","FaRegClock","AiOutlineLike","TrendingSlider","release_date","splitted","split","src","poster_path","alt","CiCalendarDate","MdStar","vote_average","toFixed","MdLanguage","original_language","HomePage","setMovies","useState","trendTV","setTrendTv","effectRun","useRef","useEffect","async","current","fetchedMovies","API","fetchedTV","error","Notiflix","failure","getMovies","BASE_URL","API_KEY","getTrandMovies","axios","url","method","data","results","getTrendTV","getMovieDetails","movieId","type","searchMovies","query"],"sourceRoot":""}