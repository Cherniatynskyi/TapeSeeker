{"version":3,"file":"static/js/961.dc881583.chunk.js","mappings":"uNAQA,MA2CA,EA3CqBA,KAEjB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,CAAC,IAC7BC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,CAAC,IACtC,QAACG,IAAWC,EAAAA,EAAAA,MACZC,GAAYC,EAAAA,EAAAA,SAAO,GAsBzB,OAnBAC,EAAAA,EAAAA,YAAU,KACNC,OAAOC,SAAS,CAACC,IAAK,EAAGC,KAAM,IACjBC,WACd,GAAGP,EAAUQ,QAAQ,CACjBR,EAAUQ,SAAU,EACpB,IACI,MAAMC,QAAqBC,EAAAA,GAAoBZ,GAC/CJ,EAASe,GAET,MAAME,QAAoBD,EAAAA,GAAoBZ,EAAS,WACvDD,EAAac,EACjB,CACA,MAAMC,GAAOC,IAAAA,OAAgBC,QAAQ,QAAQ,CACjD,GAEHC,EAAU,GACR,CAACjB,KAIAkB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAAC3B,MAAOA,EAAOG,UAAaA,KACxCuB,EAAAA,EAAAA,KAACE,EAAAA,EAAW,CAAC5B,MAAOA,EAAOG,UAAaA,KACpCuB,EAAAA,EAAAA,KAAA,WAGAA,EAAAA,EAAAA,KAACG,EAAAA,SAAQ,CAACC,UAAUJ,EAAAA,EAAAA,KAAA,OAAAD,SAAK,gBAAkBA,UACvCC,EAAAA,EAAAA,KAACK,EAAAA,GAAM,QAGhB,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useParams, Outlet } from 'react-router-dom'\nimport {useState, useEffect, useRef, Suspense} from 'react'\nimport * as API from '../../services/movies-api'\nimport Notiflix from 'notiflix';\n\nimport { DetailsHero } from '../../components/DetailsComponents/DetailsHero/DetailsHero';\nimport { DetailsInfo } from 'components/DetailsComponents/DetailsInfo/DetailsInfo';\n\nconst MovieDetails = () =>{\n\n    const [movie, setMovie] = useState({})\n    const [movieVids, setMovieVids] = useState({})\n    const {movieId} = useParams()\n    const effectRun = useRef(true)\n\n\n    useEffect(() => {\n        window.scrollTo({top: 0, left: 0});\n     const getMovie = async () =>{\n        if(effectRun.current){\n            effectRun.current = false\n            try{\n                const fetchedMovie = await API.getMovieDetails(movieId)\n                setMovie(fetchedMovie)\n\n                const movieVideos = await API.getMovieDetails(movieId, '/videos')\n                setMovieVids(movieVideos)\n            }\n            catch(error){Notiflix.Notify.failure('Error')}\n        }\n     }\n     getMovie()\n    }, [movieId])\n\n\n    return (\n        <>\n            <DetailsHero movie={movie} movieVids = {movieVids}/>    \n            <DetailsInfo movie={movie} movieVids = {movieVids}/>\n                <div>\n                    \n                </div>\n                <Suspense fallback={<div>Loading....</div>}>\n                    <Outlet/>\n                </Suspense>\n            \n        </>\n        \n    )\n}\n\nexport default MovieDetails\n\n"],"names":["MovieDetails","movie","setMovie","useState","movieVids","setMovieVids","movieId","useParams","effectRun","useRef","useEffect","window","scrollTo","top","left","async","current","fetchedMovie","API","movieVideos","error","Notiflix","failure","getMovie","_jsxs","_Fragment","children","_jsx","DetailsHero","DetailsInfo","Suspense","fallback","Outlet"],"sourceRoot":""}