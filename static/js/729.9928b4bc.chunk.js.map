{"version":3,"file":"static/js/729.9928b4bc.chunk.js","mappings":"iJACA,SAAgB,WAAa,gC,qBCEtB,MAAMA,EAAaC,IAAwB,IAAvB,OAACC,EAAM,SAAEC,GAASF,EAEzC,OAAQG,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAIC,WAAWC,SACjCN,EAASA,EAAOO,KAAIC,IAEhBN,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAAgBC,GAA0B,MAAtBT,EAASU,SAAgB,UAAAC,OAAaJ,EAAMK,IAAE,GAAAD,OAAOJ,EAAMK,IAAMC,MAAO,CAACC,KAAMd,GAAUK,UAC/GJ,EAAAA,EAAAA,KAAA,MAAAI,UACIJ,EAAAA,EAAAA,KAAA,OAAKc,IAAG,kCAAAJ,OAAoCJ,EAAMS,aAAeC,IAAKV,EAAMW,WAFxEX,EAAMK,OAKlBX,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAIe,MAAMb,SAAC,uBAC7B,C,oECbT,QAAuB,wBAAvB,EAA4D,8BAA5D,EAAkG,yB,aCE3F,MAAMc,EAAYrB,IAAiB,IAAhB,SAACsB,GAAStB,EAChC,MAAOuB,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAiB/B,OACItB,EAAAA,EAAAA,KAAA,UAAAI,UACImB,EAAAA,EAAAA,MAAA,QAAMtB,UAAWC,EAAUiB,SAZjBK,IACbJ,GAILI,EAAEC,iBACFN,EAAS,CAACC,WAJVM,MAAM,yBAIW,EAMyCtB,SAAA,EAC9CJ,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAgByB,KAAK,SAAQvB,UAChDJ,EAAAA,EAAAA,KAAA,QAAAI,SAAM,cAENJ,EAAAA,EAAAA,KAAA,SACIC,UAAWC,EACXyB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SA3BEP,IAClBH,EAASG,EAAEQ,OAAOC,MAAM,EA2BRA,MAAOb,QAGV,E,8BC/BrB,MAoCA,EApCec,KACX,MAAOC,EAAcC,IAAmBd,EAAAA,EAAAA,UAAS,MAC3Ce,GAAYC,EAAAA,EAAAA,SAAO,IAClBC,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAAIH,EAAaI,IAAI,KACrB5C,GAAW6C,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACWC,WACd,GAAGT,EAAUU,QACT,IACK,GAAQ,MAALL,EACC,OAEL,MAAMM,QAAqBC,EAAAA,GAAiBP,GAC5CN,EAAgBY,EACpB,CACA,MAAME,GAAOxB,MAAM,QAAQ,CAE/BW,EAAUU,SAAU,CAAI,EAE3BI,EAAU,GACR,CAACT,IAOP,OACInB,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,EACIJ,EAAAA,EAAAA,KAACkB,EAAS,CAACC,SAPCtB,IAAgB,IAAf,MAAEuB,GAAOvB,EAC1B2C,EAAgB,CAACE,EAAGtB,GAAO,KAOvBpB,EAAAA,EAAAA,KAACJ,EAAAA,EAAU,CAACE,OAAQqC,EAAcpC,SAAUA,MAC1C,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\"};","import css from './MoviesList.module.css'\nimport {Link} from 'react-router-dom'\n\nexport const MoviesList = ({movies, location}) =>{\n\n    return (<ul className={css.moviesList}>\n        {movies ? movies.map(movie => {\n            return(\n             <Link key={movie.id} to={location.pathname === '/' ? `movies/${movie.id}`: `${movie.id}`} state={{from: location}}>\n                <li>\n                    <img src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`} alt={movie.title}/>\n                </li>\n            </Link>)\n        }): <h1 className={css.title}>Search for Movies</h1>}\n    </ul>  )\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"formButton\":\"SearchBar_formButton__C-ydM\",\"input\":\"SearchBar_input__bIy50\"};","import { useState } from \"react\";\nimport css from './SearchBar.module.css'\n\nexport const SearchBar = ({onSubmit}) => {\n    const [query, setQuery] = useState('')\n\n    const handleChange = (e) => {\n        setQuery(e.target.value)\n    }\n\n\n    const handleSubmit = (e) => {\n        if (!query) {\n        alert(\"Enter your search term\")\n        return\n    }\n        e.preventDefault()\n        onSubmit({query})\n    }\n\n  \n        return (\n            <header >\n                <form className={css.form} onSubmit={handleSubmit}>\n                    <button className={css.formButton} type=\"submit\">\n                    <span>Search</span>\n                    </button>\n                    <input\n                        className={css.input}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies\"\n                        onChange={handleChange}\n                        value={query}\n                    />\n                </form>\n            </header>\n        )\n}","import { useState, useEffect, useRef} from \"react\"\nimport * as API from '../../services/movies-api'\nimport { SearchBar } from \"../../components/SearchBar/SearchBar\"\nimport {useSearchParams, useLocation} from 'react-router-dom'\nimport { MoviesList } from \"components/MoviesList/MoviesList\"\n\nconst Movies = () =>{\n    const [searchResult, setSearchResult] = useState(null)\n    const effectRun = useRef(false)\n    const [searchParams, setSearchParams] = useSearchParams();\n    const q = searchParams.get('q')\n    const location = useLocation()\n\n    useEffect(() => {\n        const getMovie = async () =>{\n           if(effectRun.current){\n               try{\n                    if(q == null){\n                        return\n                    }\n                   const fetchedMovie = await API.searchMovies(q)\n                   setSearchResult(fetchedMovie)\n               }\n               catch(error){alert('error')}\n           }\n           effectRun.current = true\n        }\n        getMovie()\n       }, [q])\n\n    const formHandler = ({ query }) => {\n        setSearchParams({q: query})\n      }\n\n    \n    return ( \n        <div>\n            <SearchBar onSubmit={formHandler}/>\n            <MoviesList movies={searchResult} location={location}/> \n        </div>)\n}   \n\nexport default Movies\n\n"],"names":["MoviesList","_ref","movies","location","_jsx","className","css","moviesList","children","map","movie","Link","to","pathname","concat","id","state","from","src","poster_path","alt","title","SearchBar","onSubmit","query","setQuery","useState","_jsxs","e","preventDefault","alert","type","autoComplete","autoFocus","placeholder","onChange","target","value","Movies","searchResult","setSearchResult","effectRun","useRef","searchParams","setSearchParams","useSearchParams","q","get","useLocation","useEffect","async","current","fetchedMovie","API","error","getMovie"],"sourceRoot":""}