{"version":3,"file":"static/js/544.16a6702c.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/DetailsComponents/DetailsHero/DetailsHero.module.css?5ffb","webpack://goit-react-hw-05-movies/./src/components/DetailsComponents/TrailerModal/TrailerModal.module.css?05a2","components/DetailsComponents/TrailerModal/TrailerModal.jsx","../node_modules/@uidotdev/usehooks/index.js","components/DetailsComponents/DetailsHero/DetailsHero.jsx","webpack://goit-react-hw-05-movies/./src/components/DetailsComponents/Cast/Cast.module.css?e060","components/DetailsComponents/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/DetailsComponents/DetailsInfo/DetailsInfo.module.css?45bf","components/DetailsComponents/DetailsInfo/VideosSlider.jsx","components/DetailsComponents/DetailsInfo/DetailsInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"heroContainer\":\"DetailsHero_heroContainer__50wmX\",\"backButton\":\"DetailsHero_backButton__Q90zY\",\"poster\":\"DetailsHero_poster__oZuM+\",\"heroTextContainer\":\"DetailsHero_heroTextContainer__qujEh\",\"heroTitle\":\"DetailsHero_heroTitle__5Rcx6\",\"heroDesc\":\"DetailsHero_heroDesc__2g2fL\",\"heroNav\":\"DetailsHero_heroNav__NgCOw\",\"heroButton\":\"DetailsHero_heroButton__DSrXS\",\"heroOptions\":\"DetailsHero_heroOptions__bNZQm\",\"heroOptionItem\":\"DetailsHero_heroOptionItem__NUdnv\",\"companiesContainer\":\"DetailsHero_companiesContainer__yWnJN\",\"compLogos\":\"DetailsHero_compLogos__AV2uf\"};","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"TrailerModal_Overlay__Xpx18\",\"Modal\":\"TrailerModal_Modal__QlYNH\",\"closeButton\":\"TrailerModal_closeButton__STJ90\",\"closeIcon\":\"TrailerModal_closeIcon__yXPOS\",\"frameStyle\":\"TrailerModal_frameStyle__jmkOT\",\"modalCloseButton\":\"TrailerModal_modalCloseButton__KAl58\"};","import { useEffect, useRef } from 'react'\nimport css from './TrailerModal.module.css'\nimport { IoClose } from \"react-icons/io5\";\nimport { useLockBodyScroll } from \"@uidotdev/usehooks\";\n\n\nexport const TrailerModal = ({ onClose, movieVids}) => {\n\n    const firstRender = useRef(false)\n    const trailerUrl = movieVids?.results?.find(element => element.name.includes(\"Official Trailer\") || element.name.includes(\"Trailer\"))\n    useLockBodyScroll();\n\n    useEffect(() => {\n      if(firstRender.current === true){\n        window.addEventListener('keydown', handleKeyDown)\n      }\n\n      return () => {\n        firstRender.current = true\n        window.removeEventListener('keydown', handleKeyDown)\n      }\n    },)\n\n    const handleKeyDown = e => {\n            if (e.code === 'Escape') {  \n                onClose()              \n            }\n    }\n\n    const handleBackdropClick = e => {\n        if (e.target === e.currentTarget) {\n            onClose()\n        }\n    }\n\n    const handleButtonClose = ()=>{\n      onClose()\n    }\n\n        return (\n            <div className={css.Overlay} onClick={handleBackdropClick}>\n                <div className={css.Modal}>\n                    {trailerUrl ? \n                      <iframe className={css.frameStyle}  title={trailerUrl.name} allowFullScreen={true}\n                        src={`https://www.youtube.com/embed/${trailerUrl.key}`}>\n                      </iframe> : <div style={{color: \"white\", fontSize:\"4em\", paddingTop: \"80px\"}}>No trailers </div>\n                    } \n                    <button className={css.modalCloseButton} onClick={handleButtonClose}><IoClose color='white' size=\"4em\"/></button>\n                </div>\n            </div>\n        )\n}","import * as React from \"react\";\n\nfunction isShallowEqual(object1, object2) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (let key of keys1) {\n    if (object1[key] !== object2[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isTouchEvent({ nativeEvent }) {\n  return window.TouchEvent\n    ? nativeEvent instanceof TouchEvent\n    : \"touches\" in nativeEvent;\n}\n\nfunction isMouseEvent(event) {\n  return event.nativeEvent instanceof MouseEvent;\n}\n\nfunction throttle(cb, ms) {\n  let lastTime = 0;\n  return () => {\n    const now = Date.now();\n    if (now - lastTime >= ms) {\n      cb();\n      lastTime = now;\n    }\n  };\n}\n\nfunction isPlainObject(value) {\n  return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n\nfunction dispatchStorageEvent(key, newValue) {\n  window.dispatchEvent(new StorageEvent(\"storage\", { key, newValue }));\n}\n\nexport function useBattery() {\n  const [state, setState] = React.useState({\n    supported: true,\n    loading: true,\n    level: null,\n    charging: null,\n    chargingTime: null,\n    dischargingTime: null,\n  });\n\n  React.useEffect(() => {\n    if (!navigator.getBattery) {\n      setState((s) => ({\n        ...s,\n        supported: false,\n        loading: false,\n      }));\n      return;\n    }\n\n    let battery = null;\n\n    const handleChange = () => {\n      setState({\n        supported: true,\n        loading: false,\n        level: battery.level,\n        charging: battery.charging,\n        chargingTime: battery.chargingTime,\n        dischargingTime: battery.dischargingTime,\n      });\n    };\n\n    navigator.getBattery().then((b) => {\n      battery = b;\n      handleChange();\n\n      b.addEventListener(\"levelchange\", handleChange);\n      b.addEventListener(\"chargingchange\", handleChange);\n      b.addEventListener(\"chargingtimechange\", handleChange);\n      b.addEventListener(\"dischargingtimechange\", handleChange);\n    });\n\n    return () => {\n      if (battery) {\n        battery.removeEventListener(\"levelchange\", handleChange);\n        battery.removeEventListener(\"chargingchange\", handleChange);\n        battery.removeEventListener(\"chargingtimechange\", handleChange);\n        battery.removeEventListener(\"dischargingtimechange\", handleChange);\n      }\n    };\n  }, []);\n\n  return state;\n}\n\nexport function useClickAway(cb) {\n  const ref = React.useRef(null);\n  const refCb = React.useRef(cb);\n\n  React.useLayoutEffect(() => {\n    refCb.current = cb;\n  });\n\n  React.useEffect(() => {\n    const handler = (e) => {\n      const element = ref.current;\n      if (element && !element.contains(e.target)) {\n        refCb.current(e);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handler);\n    document.addEventListener(\"touchstart\", handler);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handler);\n      document.removeEventListener(\"touchstart\", handler);\n    };\n  }, []);\n\n  return ref;\n}\n\nfunction oldSchoolCopy(text) {\n  const tempTextArea = document.createElement(\"textarea\");\n  tempTextArea.value = text;\n  document.body.appendChild(tempTextArea);\n  tempTextArea.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(tempTextArea);\n}\n\nexport function useCopyToClipboard() {\n  const [state, setState] = React.useState(null);\n\n  const copyToClipboard = React.useCallback((value) => {\n    const handleCopy = async () => {\n      try {\n        if (navigator?.clipboard?.writeText) {\n          await navigator.clipboard.writeText(value);\n          setState(value);\n        } else {\n          throw new Error(\"writeText not supported\");\n        }\n      } catch (e) {\n        oldSchoolCopy(value);\n        setState(value);\n      }\n    };\n\n    handleCopy();\n  }, []);\n\n  return [state, copyToClipboard];\n}\n\nexport function useCounter(startingValue = 0, options = {}) {\n  const { min, max } = options;\n\n  if (typeof min === \"number\" && startingValue < min) {\n    throw new Error(\n      `Your starting value of ${startingValue} is less than your min of ${min}.`\n    );\n  }\n\n  if (typeof max === \"number\" && startingValue > max) {\n    throw new Error(\n      `Your starting value of ${startingValue} is greater than your max of ${max}.`\n    );\n  }\n\n  const [count, setCount] = React.useState(startingValue);\n\n  const increment = React.useCallback(() => {\n    setCount((c) => {\n      const nextCount = c + 1;\n\n      if (typeof max === \"number\" && nextCount > max) {\n        return c;\n      }\n\n      return nextCount;\n    });\n  }, [max]);\n\n  const decrement = React.useCallback(() => {\n    setCount((c) => {\n      const nextCount = c - 1;\n\n      if (typeof min === \"number\" && nextCount < min) {\n        return c;\n      }\n\n      return nextCount;\n    });\n  }, [min]);\n\n  const set = React.useCallback(\n    (nextCount) => {\n      setCount((c) => {\n        if (typeof max === \"number\" && nextCount > max) {\n          return c;\n        }\n\n        if (typeof min === \"number\" && nextCount < min) {\n          return c;\n        }\n\n        return nextCount;\n      });\n    },\n    [max, min]\n  );\n\n  const reset = React.useCallback(() => {\n    setCount(startingValue);\n  }, [startingValue]);\n\n  return [\n    count,\n    {\n      increment,\n      decrement,\n      set,\n      reset,\n    },\n  ];\n}\n\nexport function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n\n  React.useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport function useDefault(initialValue, defaultValue) {\n  const [state, setState] = React.useState(initialValue);\n\n  if (typeof state === \"undefined\" || state === null) {\n    return [defaultValue, setState];\n  }\n\n  return [state, setState];\n}\n\nexport function useDocumentTitle(title) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n\nexport function useFavicon(url) {\n  React.useEffect(() => {\n    let link = document.querySelector(`link[rel~=\"icon\"]`);\n\n    if (!link) {\n      link = document.createElement(\"link\");\n      link.type = \"image/x-icon\";\n      link.rel = \"icon\";\n      link.href = url;\n      document.head.appendChild(link);\n    } else {\n      link.href = url;\n    }\n  }, [url]);\n}\n\nexport function useGeolocation(options = {}) {\n  const [state, setState] = React.useState({\n    loading: true,\n    accuracy: null,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    latitude: null,\n    longitude: null,\n    speed: null,\n    timestamp: null,\n    error: null,\n  });\n\n  const optionsRef = React.useRef(options);\n\n  React.useEffect(() => {\n    const onEvent = ({ coords, timestamp }) => {\n      setState({\n        loading: false,\n        timestamp,\n        latitude: coords.latitude,\n        longitude: coords.longitude,\n        altitude: coords.altitude,\n        accuracy: coords.accuracy,\n        altitudeAccuracy: coords.altitudeAccuracy,\n        heading: coords.heading,\n        speed: coords.speed,\n      });\n    };\n\n    const onEventError = (error) => {\n      setState((s) => ({\n        ...s,\n        loading: false,\n        error,\n      }));\n    };\n\n    navigator.geolocation.getCurrentPosition(\n      onEvent,\n      onEventError,\n      optionsRef.current\n    );\n\n    const watchId = navigator.geolocation.watchPosition(\n      onEvent,\n      onEventError,\n      optionsRef.current\n    );\n\n    return () => {\n      navigator.geolocation.clearWatch(watchId);\n    };\n  }, []);\n\n  return state;\n}\n\nconst initialUseHistoryStateState = {\n  past: [],\n  present: null,\n  future: [],\n};\n\nconst useHistoryStateReducer = (state, action) => {\n  const { past, present, future } = state;\n\n  if (action.type === \"UNDO\") {\n    return {\n      past: past.slice(0, past.length - 1),\n      present: past[past.length - 1],\n      future: [present, ...future],\n    };\n  } else if (action.type === \"REDO\") {\n    return {\n      past: [...past, present],\n      present: future[0],\n      future: future.slice(1),\n    };\n  } else if (action.type === \"SET\") {\n    const { newPresent } = action;\n\n    if (action.newPresent === present) {\n      return state;\n    }\n\n    return {\n      past: [...past, present],\n      present: newPresent,\n      future: [],\n    };\n  } else if (action.type === \"CLEAR\") {\n    return {\n      ...initialUseHistoryStateState,\n      present: action.initialPresent,\n    };\n  } else {\n    throw new Error(\"Unsupported action type\");\n  }\n};\n\nexport function useHistoryState(initialPresent = {}) {\n  const initialPresentRef = React.useRef(initialPresent);\n\n  const [state, dispatch] = React.useReducer(useHistoryStateReducer, {\n    ...initialUseHistoryStateState,\n    present: initialPresentRef.current,\n  });\n\n  const canUndo = state.past.length !== 0;\n  const canRedo = state.future.length !== 0;\n\n  const undo = React.useCallback(() => {\n    if (canUndo) {\n      dispatch({ type: \"UNDO\" });\n    }\n  }, [canUndo]);\n\n  const redo = React.useCallback(() => {\n    if (canRedo) {\n      dispatch({ type: \"REDO\" });\n    }\n  }, [canRedo]);\n\n  const set = React.useCallback(\n    (newPresent) => dispatch({ type: \"SET\", newPresent }),\n    []\n  );\n\n  const clear = React.useCallback(\n    () =>\n      dispatch({ type: \"CLEAR\", initialPresent: initialPresentRef.current }),\n    []\n  );\n\n  return { state: state.present, set, undo, redo, clear, canUndo, canRedo };\n}\n\nexport function useHover() {\n  const [hovering, setHovering] = React.useState(false);\n  const previousNode = React.useRef(null);\n\n  const handleMouseEnter = React.useCallback(() => {\n    setHovering(true);\n  }, []);\n\n  const handleMouseLeave = React.useCallback(() => {\n    setHovering(false);\n  }, []);\n\n  const customRef = React.useCallback(\n    (node) => {\n      if (previousNode.current?.nodeType === Node.ELEMENT_NODE) {\n        previousNode.current.removeEventListener(\n          \"mouseenter\",\n          handleMouseEnter\n        );\n        previousNode.current.removeEventListener(\n          \"mouseleave\",\n          handleMouseLeave\n        );\n      }\n\n      if (node?.nodeType === Node.ELEMENT_NODE) {\n        node.addEventListener(\"mouseenter\", handleMouseEnter);\n        node.addEventListener(\"mouseleave\", handleMouseLeave);\n      }\n\n      previousNode.current = node;\n    },\n    [handleMouseEnter, handleMouseLeave]\n  );\n\n  return [customRef, hovering];\n}\n\nexport function useIdle(ms = 1000 * 60) {\n  const [idle, setIdle] = React.useState(false);\n\n  React.useEffect(() => {\n    let timeoutId;\n\n    const handleTimeout = () => {\n      setIdle(true);\n    };\n\n    const handleEvent = throttle((e) => {\n      setIdle(false);\n\n      window.clearTimeout(timeoutId);\n      timeoutId = window.setTimeout(handleTimeout, ms);\n    }, 500);\n\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        handleEvent();\n      }\n    };\n\n    timeoutId = window.setTimeout(handleTimeout, ms);\n\n    window.addEventListener(\"mousemove\", handleEvent);\n    window.addEventListener(\"mousedown\", handleEvent);\n    window.addEventListener(\"resize\", handleEvent);\n    window.addEventListener(\"keydown\", handleEvent);\n    window.addEventListener(\"touchstart\", handleEvent);\n    window.addEventListener(\"wheel\", handleEvent);\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleEvent);\n      window.removeEventListener(\"mousedown\", handleEvent);\n      window.removeEventListener(\"resize\", handleEvent);\n      window.removeEventListener(\"keydown\", handleEvent);\n      window.removeEventListener(\"touchstart\", handleEvent);\n      window.removeEventListener(\"wheel\", handleEvent);\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n      window.clearTimeout(timeoutId);\n    };\n  }, [ms]);\n\n  return idle;\n}\n\nexport function useIntersectionObserver(options = {}) {\n  const { threshold = 1, root = null, rootMargin = \"0px\" } = options;\n  const [entry, setEntry] = React.useState(null);\n\n  const previousObserver = React.useRef(null);\n\n  const customRef = React.useCallback(\n    (node) => {\n      if (previousObserver.current) {\n        previousObserver.current.disconnect();\n        previousObserver.current = null;\n      }\n\n      if (node?.nodeType === Node.ELEMENT_NODE) {\n        const observer = new IntersectionObserver(\n          ([entry]) => {\n            setEntry(entry);\n          },\n          { threshold, root, rootMargin }\n        );\n\n        observer.observe(node);\n        previousObserver.current = observer;\n      }\n    },\n    [threshold, root, rootMargin]\n  );\n\n  return [customRef, entry];\n}\n\nexport function useIsClient() {\n  const [isClient, setIsClient] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  return isClient;\n}\n\nexport function useIsFirstRender() {\n  const renderRef = React.useRef(true);\n\n  if (renderRef.current === true) {\n    renderRef.current = false;\n    return true;\n  }\n\n  return renderRef.current;\n}\n\nexport function useList(defaultList = []) {\n  const [list, setList] = React.useState(defaultList);\n\n  const set = React.useCallback((l) => {\n    setList(l);\n  }, []);\n\n  const push = React.useCallback((element) => {\n    setList((l) => [...l, element]);\n  }, []);\n\n  const removeAt = React.useCallback((index) => {\n    setList((l) => [...l.slice(0, index), ...l.slice(index + 1)]);\n  }, []);\n\n  const insertAt = React.useCallback((index, element) => {\n    setList((l) => [...l.slice(0, index), element, ...l.slice(index)]);\n  }, []);\n\n  const updateAt = React.useCallback((index, element) => {\n    setList((l) => l.map((e, i) => (i === index ? element : e)));\n  }, []);\n\n  const clear = React.useCallback(() => setList([]), []);\n\n  return [list, { set, push, removeAt, insertAt, updateAt, clear }];\n}\n\nconst setLocalStorageItem = (key, value) => {\n  const stringifiedValue = JSON.stringify(value);\n  window.localStorage.setItem(key, stringifiedValue);\n  dispatchStorageEvent(key, stringifiedValue);\n};\n\nconst removeLocalStorageItem = (key) => {\n  window.localStorage.removeItem(key);\n  dispatchStorageEvent(key, null);\n};\n\nconst getLocalStorageItem = (key) => {\n  return window.localStorage.getItem(key);\n};\n\nconst useLocalStorageSubscribe = (callback) => {\n  window.addEventListener(\"storage\", callback);\n  return () => window.removeEventListener(\"storage\", callback);\n};\n\nconst getLocalStorageServerSnapshot = () => {\n  throw Error(\"useLocalStorage is a client-only hook\");\n};\n\nexport function useLocalStorage(key, initialValue) {\n  const getSnapshot = () => getLocalStorageItem(key);\n\n  const store = React.useSyncExternalStore(\n    useLocalStorageSubscribe,\n    getSnapshot,\n    getLocalStorageServerSnapshot\n  );\n\n  const setState = React.useCallback(\n    (v) => {\n      try {\n        const nextState = typeof v === \"function\" ? v(JSON.parse(store)) : v;\n\n        if (nextState === undefined || nextState === null) {\n          removeLocalStorageItem(key);\n        } else {\n          setLocalStorageItem(key, nextState);\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    [key, store]\n  );\n\n  React.useEffect(() => {\n    if (\n      getLocalStorageItem(key) === null &&\n      typeof initialValue !== \"undefined\"\n    ) {\n      setLocalStorageItem(key, initialValue);\n    }\n  }, [key, initialValue]);\n\n  return [store ? JSON.parse(store) : initialValue, setState];\n}\n\nexport function useLockBodyScroll() {\n  React.useLayoutEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = \"hidden\";\n    return () => {\n      document.body.style.overflow = originalStyle;\n    };\n  }, []);\n}\n\nexport function useLongPress(callback, options = {}) {\n  const { threshold = 400, onStart, onFinish, onCancel } = options;\n  const isLongPressActive = React.useRef(false);\n  const isPressed = React.useRef(false);\n  const timerId = React.useRef();\n\n  return React.useMemo(() => {\n    if (typeof callback !== \"function\") {\n      return {};\n    }\n\n    const start = (event) => {\n      if (!isMouseEvent(event) && !isTouchEvent(event)) return;\n\n      if (onStart) {\n        onStart(event);\n      }\n\n      isPressed.current = true;\n      timerId.current = setTimeout(() => {\n        callback(event);\n        isLongPressActive.current = true;\n      }, threshold);\n    };\n\n    const cancel = (event) => {\n      if (!isMouseEvent(event) && !isTouchEvent(event)) return;\n\n      if (isLongPressActive.current) {\n        if (onFinish) {\n          onFinish(event);\n        }\n      } else if (isPressed.current) {\n        if (onCancel) {\n          onCancel(event);\n        }\n      }\n\n      isLongPressActive.current = false;\n      isPressed.current = false;\n\n      if (timerId.current) {\n        window.clearTimeout(timerId.current);\n      }\n    };\n\n    const mouseHandlers = {\n      onMouseDown: start,\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n    };\n\n    const touchHandlers = {\n      onTouchStart: start,\n      onTouchEnd: cancel,\n    };\n\n    return {\n      ...mouseHandlers,\n      ...touchHandlers,\n    };\n  }, [callback, threshold, onCancel, onFinish, onStart]);\n}\n\nexport function useMap(initialState) {\n  const mapRef = React.useRef(new Map(initialState));\n  const [, reRender] = React.useReducer((x) => x + 1, 0);\n\n  mapRef.current.set = (...args) => {\n    Map.prototype.set.apply(mapRef.current, args);\n    reRender();\n    return mapRef.current;\n  };\n\n  mapRef.current.clear = (...args) => {\n    Map.prototype.clear.apply(mapRef.current, args);\n    reRender();\n  };\n\n  mapRef.current.delete = (...args) => {\n    const res = Map.prototype.delete.apply(mapRef.current, args);\n    reRender();\n\n    return res;\n  };\n\n  return mapRef.current;\n}\n\nexport function useMeasure() {\n  const [dimensions, setDimensions] = React.useState({\n    width: null,\n    height: null,\n  });\n\n  const previousObserver = React.useRef(null);\n\n  const customRef = React.useCallback((node) => {\n    if (previousObserver.current) {\n      previousObserver.current.disconnect();\n      previousObserver.current = null;\n    }\n\n    if (node?.nodeType === Node.ELEMENT_NODE) {\n      const observer = new ResizeObserver(([entry]) => {\n        if (entry && entry.borderBoxSize) {\n          const { inlineSize: width, blockSize: height } =\n            entry.borderBoxSize[0];\n\n          setDimensions({ width, height });\n        }\n      });\n\n      observer.observe(node);\n      previousObserver.current = observer;\n    }\n  }, []);\n\n  return [customRef, dimensions];\n}\n\nexport function useMediaQuery(query) {\n  const subscribe = React.useCallback(\n    (callback) => {\n      const matchMedia = window.matchMedia(query);\n\n      matchMedia.addEventListener(\"change\", callback);\n      return () => {\n        matchMedia.removeEventListener(\"change\", callback);\n      };\n    },\n    [query]\n  );\n\n  const getSnapshot = () => {\n    return window.matchMedia(query).matches;\n  };\n\n  const getServerSnapshot = () => {\n    throw Error(\"useMediaQuery is a client-only hook\");\n  };\n\n  return React.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\nexport function useMouse() {\n  const [state, setState] = React.useState({\n    x: 0,\n    y: 0,\n    elementX: 0,\n    elementY: 0,\n    elementPositionX: 0,\n    elementPositionY: 0,\n  });\n\n  const ref = React.useRef(null);\n\n  React.useLayoutEffect(() => {\n    const handleMouseMove = (event) => {\n      let newState = {\n        x: event.pageX,\n        y: event.pageY,\n      };\n\n      if (ref.current?.nodeType === Node.ELEMENT_NODE) {\n        const { left, top } = ref.current.getBoundingClientRect();\n        const elementPositionX = left + window.scrollX;\n        const elementPositionY = top + window.scrollY;\n        const elementX = event.pageX - elementPositionX;\n        const elementY = event.pageY - elementPositionY;\n\n        newState.elementX = elementX;\n        newState.elementY = elementY;\n        newState.elementPositionX = elementPositionX;\n        newState.elementPositionY = elementPositionY;\n      }\n\n      setState((s) => {\n        return {\n          ...s,\n          ...newState,\n        };\n      });\n    };\n\n    document.addEventListener(\"mousemove\", handleMouseMove);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, []);\n\n  return [state, ref];\n}\n\nconst getConnection = () => {\n  return (\n    navigator?.connection ||\n    navigator?.mozConnection ||\n    navigator?.webkitConnection\n  );\n};\n\nconst useNetworkStateSubscribe = (callback) => {\n  window.addEventListener(\"online\", callback, { passive: true });\n  window.addEventListener(\"offline\", callback, { passive: true });\n\n  const connection = getConnection();\n\n  if (connection) {\n    connection.addEventListener(\"change\", callback, { passive: true });\n  }\n\n  return () => {\n    window.removeEventListener(\"online\", callback);\n    window.removeEventListener(\"offline\", callback);\n\n    if (connection) {\n      connection.removeEventListener(\"change\", callback);\n    }\n  };\n};\n\nconst getNetworkStateServerSnapshot = () => {\n  throw Error(\"useNetworkState is a client-only hook\");\n};\n\nexport function useNetworkState() {\n  const cache = React.useRef({});\n\n  const getSnapshot = () => {\n    const online = navigator.onLine;\n    const connection = getConnection();\n\n    const nextState = {\n      online,\n      downlink: connection?.downlink,\n      downlinkMax: connection?.downlinkMax,\n      effectiveType: connection?.effectiveType,\n      rtt: connection?.rtt,\n      saveData: connection?.saveData,\n      type: connection?.type,\n    };\n\n    if (isShallowEqual(cache.current, nextState)) {\n      return cache.current;\n    } else {\n      cache.current = nextState;\n      return nextState;\n    }\n  };\n\n  return React.useSyncExternalStore(\n    useNetworkStateSubscribe,\n    getSnapshot,\n    getNetworkStateServerSnapshot\n  );\n}\n\nexport function useObjectState(initialValue) {\n  const [state, setState] = React.useState(initialValue);\n\n  const handleUpdate = React.useCallback((arg) => {\n    if (typeof arg === \"function\") {\n      setState((s) => {\n        const newState = arg(s);\n\n        if (isPlainObject(newState)) {\n          return {\n            ...s,\n            ...newState,\n          };\n        }\n      });\n    }\n\n    if (isPlainObject(arg)) {\n      setState((s) => ({\n        ...s,\n        ...arg,\n      }));\n    }\n  }, []);\n\n  return [state, handleUpdate];\n}\n\nexport function useOrientation() {\n  const [orientation, setOrientation] = React.useState({\n    angle: 0,\n    type: \"landscape-primary\",\n  });\n\n  React.useLayoutEffect(() => {\n    const handleChange = () => {\n      const { angle, type } = window.screen.orientation;\n      setOrientation({\n        angle,\n        type,\n      });\n    };\n\n    const handle_orientationchange = () => {\n      setOrientation({\n        type: \"UNKNOWN\",\n        angle: window.orientation,\n      });\n    };\n\n    if (window.screen?.orientation) {\n      handleChange();\n      window.screen.orientation.addEventListener(\"change\", handleChange);\n    } else {\n      handle_orientationchange();\n      window.addEventListener(\"orientationchange\", handle_orientationchange);\n    }\n\n    return () => {\n      if (window.screen?.orientation) {\n        window.screen.orientation.removeEventListener(\"change\", handleChange);\n      } else {\n        window.removeEventListener(\n          \"orientationchange\",\n          handle_orientationchange\n        );\n      }\n    };\n  }, []);\n\n  return orientation;\n}\n\nconst usePreferredLanguageSubscribe = (cb) => {\n  window.addEventListener(\"languagechange\", cb);\n  return () => window.removeEventListener(\"languagechange\", cb);\n};\n\nconst getPreferredLanguageSnapshot = () => {\n  return navigator.language;\n};\n\nconst getPreferredLanguageServerSnapshot = () => {\n  throw Error(\"usePreferredLanguage is a client-only hook\");\n};\n\nexport function usePreferredLanguage() {\n  return React.useSyncExternalStore(\n    usePreferredLanguageSubscribe,\n    getPreferredLanguageSnapshot,\n    getPreferredLanguageServerSnapshot\n  );\n}\n\nexport function usePrevious(value) {\n  const [current, setCurrent] = React.useState(value);\n  const [previous, setPrevious] = React.useState(null);\n\n  if (value !== current) {\n    setPrevious(current);\n    setCurrent(value);\n  }\n\n  return previous;\n}\n\nexport function useQueue(initialValue = []) {\n  const [queue, setQueue] = React.useState(initialValue);\n\n  const add = React.useCallback((element) => {\n    setQueue((q) => [...q, element]);\n  }, []);\n\n  const remove = React.useCallback(() => {\n    let removedElement;\n\n    setQueue(([first, ...q]) => {\n      removedElement = first;\n      return q;\n    });\n\n    return removedElement;\n  }, []);\n\n  const clear = React.useCallback(() => {\n    setQueue([]);\n  }, []);\n\n  return {\n    add,\n    remove,\n    clear,\n    first: queue[0],\n    last: queue[queue.length - 1],\n    size: queue.length,\n    queue,\n  };\n}\n\nexport function useRenderCount() {\n  const count = React.useRef(0);\n\n  count.current++;\n\n  return count.current;\n}\n\nexport function useRenderInfo(name = \"Unknown\") {\n  const count = React.useRef(0);\n  const lastRender = React.useRef();\n  const now = Date.now();\n\n  count.current++;\n\n  React.useEffect(() => {\n    lastRender.current = Date.now();\n  });\n\n  const sinceLastRender = lastRender.current ? now - lastRender.current : 0;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    const info = {\n      name,\n      renders: count.current,\n      sinceLastRender,\n      timestamp: now,\n    };\n\n    console.log(info);\n\n    return info;\n  }\n}\n\nexport function useScript(src, options = {}) {\n  const [status, setStatus] = React.useState(\"loading\");\n  const optionsRef = React.useRef(options);\n\n  React.useEffect(() => {\n    let script = document.querySelector(`script[src=\"${src}\"]`);\n\n    const domStatus = script?.getAttribute(\"data-status\");\n    if (domStatus) {\n      setStatus(domStatus);\n      return;\n    }\n\n    if (script === null) {\n      script = document.createElement(\"script\");\n      script.src = src;\n      script.async = true;\n      script.setAttribute(\"data-status\", \"loading\");\n      document.body.appendChild(script);\n\n      const handleScriptLoad = () => {\n        script.setAttribute(\"data-status\", \"ready\");\n        setStatus(\"ready\");\n        removeEventListeners();\n      };\n\n      const handleScriptError = () => {\n        script.setAttribute(\"data-status\", \"error\");\n        setStatus(\"error\");\n        removeEventListeners();\n      };\n\n      const removeEventListeners = () => {\n        script.removeEventListener(\"load\", handleScriptLoad);\n        script.removeEventListener(\"error\", handleScriptError);\n      };\n\n      script.addEventListener(\"load\", handleScriptLoad);\n      script.addEventListener(\"error\", handleScriptError);\n\n      const removeOnUnmount = optionsRef.current.removeOnUnmount;\n\n      return () => {\n        if (removeOnUnmount === true) {\n          script.remove();\n          removeEventListeners();\n        }\n      };\n    } else {\n      setStatus(\"unknown\");\n    }\n  }, [src]);\n\n  return status;\n}\n\nconst setSessionStorageItem = (key, value) => {\n  const stringifiedValue = JSON.stringify(value);\n  window.sessionStorage.setItem(key, stringifiedValue);\n  dispatchStorageEvent(key, stringifiedValue);\n};\n\nconst removeSessionStorageItem = (key) => {\n  window.sessionStorage.removeItem(key);\n  dispatchStorageEvent(key, null);\n};\n\nconst getSessionStorageItem = (key) => {\n  return window.sessionStorage.getItem(key);\n};\n\nconst useSessionStorageSubscribe = (callback) => {\n  window.addEventListener(\"storage\", callback);\n  return () => window.removeEventListener(\"storage\", callback);\n};\n\nconst getSessionStorageServerSnapshot = () => {\n  throw Error(\"useSessionStorage is a client-only hook\");\n};\n\nexport function useSessionStorage(key, initialValue) {\n  const getSnapshot = () => getSessionStorageItem(key);\n\n  const store = React.useSyncExternalStore(\n    useSessionStorageSubscribe,\n    getSnapshot,\n    getSessionStorageServerSnapshot\n  );\n\n  const setState = React.useCallback(\n    (v) => {\n      try {\n        const nextState = typeof v === \"function\" ? v(JSON.parse(store)) : v;\n\n        if (nextState === undefined || nextState === null) {\n          removeSessionStorageItem(key);\n        } else {\n          setSessionStorageItem(key, nextState);\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    [key, store]\n  );\n\n  React.useEffect(() => {\n    if (\n      getSessionStorageItem(key) === null &&\n      typeof initialValue !== \"undefined\"\n    ) {\n      setSessionStorageItem(key, initialValue);\n    }\n  }, [key, initialValue]);\n\n  return [store ? JSON.parse(store) : initialValue, setState];\n}\n\nexport function useSet(values) {\n  const setRef = React.useRef(new Set(values));\n  const [, reRender] = React.useReducer((x) => x + 1, 0);\n\n  setRef.current.add = (...args) => {\n    const res = Set.prototype.add.apply(setRef.current, args);\n    reRender();\n\n    return res;\n  };\n\n  setRef.current.clear = (...args) => {\n    Set.prototype.clear.apply(setRef.current, args);\n    reRender();\n  };\n\n  setRef.current.delete = (...args) => {\n    const res = Set.prototype.delete.apply(setRef.current, args);\n    reRender();\n\n    return res;\n  };\n\n  return setRef.current;\n}\n\nexport function useThrottle(value, interval = 500) {\n  const [throttledValue, setThrottledValue] = React.useState(value);\n  const lastUpdated = React.useRef(null);\n\n  React.useEffect(() => {\n    const now = Date.now();\n\n    if (lastUpdated.current && now >= lastUpdated.current + interval) {\n      lastUpdated.current = now;\n      setThrottledValue(value);\n    } else {\n      const id = window.setTimeout(() => {\n        lastUpdated.current = now;\n        setThrottledValue(value);\n      }, interval);\n\n      return () => window.clearTimeout(id);\n    }\n  }, [value, interval]);\n\n  return throttledValue;\n}\n\nexport function useToggle(initialValue) {\n  const [on, setOn] = React.useState(() => {\n    if (typeof initialValue === \"boolean\") {\n      return initialValue;\n    }\n\n    return Boolean(initialValue);\n  });\n\n  const handleToggle = React.useCallback((value) => {\n    if (typeof value === \"boolean\") {\n      return setOn(value);\n    }\n\n    return setOn((v) => !v);\n  }, []);\n\n  return [on, handleToggle];\n}\n\nconst useVisibilityChangeSubscribe = (callback) => {\n  document.addEventListener(\"visibilitychange\", callback);\n\n  return () => {\n    document.removeEventListener(\"visibilitychange\", callback);\n  };\n};\n\nconst getVisibilityChangeSnapshot = () => {\n  return document.visibilityState;\n};\n\nconst getVisibilityChangeServerSnapshot = () => {\n  throw Error(\"useVisibilityChange is a client-only hook\");\n};\n\nexport function useVisibilityChange() {\n  const visibilityState = React.useSyncExternalStore(\n    useVisibilityChangeSubscribe,\n    getVisibilityChangeSnapshot,\n    getVisibilityChangeServerSnapshot\n  );\n\n  return visibilityState === \"visible\";\n}\n\nexport function useWindowScroll() {\n  const [state, setState] = React.useState({\n    x: null,\n    y: null,\n  });\n\n  const scrollTo = React.useCallback((...args) => {\n    if (typeof args[0] === \"object\") {\n      window.scrollTo(args[0]);\n    } else if (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n      window.scrollTo(args[0], args[1]);\n    } else {\n      throw new Error(\n        `Invalid arguments passed to scrollTo. See here for more info. https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo`\n      );\n    }\n  }, []);\n\n  React.useLayoutEffect(() => {\n    const handleScroll = () => {\n      setState({ x: window.scrollX, y: window.scrollY });\n    };\n\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return [state, scrollTo];\n}\n\nexport function useWindowSize() {\n  const [size, setSize] = React.useState({\n    width: null,\n    height: null,\n  });\n\n  React.useLayoutEffect(() => {\n    const handleResize = () => {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return size;\n}\n","import css from './DetailsHero.module.css'\nimport { Link } from 'react-router-dom'\nimport { FaCirclePlay } from \"react-icons/fa6\";\nimport { FaRegHeart } from \"react-icons/fa\";\nimport { FaRegClock } from \"react-icons/fa6\";\nimport { AiOutlineLike } from \"react-icons/ai\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\n\nimport { useRef, useState} from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { TrailerModal } from '../TrailerModal/TrailerModal';\n\n\nexport const DetailsHero = ({movie, movieVids})=>{\n    const location = useLocation()\n    const backLinkLocation = useRef(location.state?.from ?? '/')\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n      \n    const OpenModal = () =>{\n        setModalIsOpen(true)\n         \n      }\n  \n      const closeModal = () => {\n        setModalIsOpen(false)\n        \n     }\n\n    return(<>\n                    <div>\n                        {console.log(location)}\n                        {console.log(location.state)}\n                        \n                        <div className={css.heroContainer} style={{backgroundImage: `linear-gradient(0deg, #141414 10%, rgba(20, 20, 20, .7) 100%), url(\"https://image.tmdb.org/t/p/original${movie.backdrop_path}\")`}}>\n                            <Link className={css.backButton} to={backLinkLocation.current}><IoMdArrowRoundBack /> Back to movies</Link>\n                            <div className={css.posterWrap}>\n                                <img className={css.poster} src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"\" />\n                            </div>\n                            <div className={css.heroTextContainer}>\n                                <h2 className={css.heroTitle}>{movie.title ? movie.title : movie.name}</h2>\n                                <p className={css.heroDesc}>{movie.overview}</p>\n                                <div className={css.heroNav}>\n                                    < button onClick={OpenModal} className={css.heroButton}><FaCirclePlay size=\"1.2em\"/>View Trailer</button>\n                                    {modalIsOpen && <TrailerModal onClose={closeModal} movieVids={movieVids}></TrailerModal>}\n                                    <div className={css.heroOptions}>\n                                        <button className={css.heroOptionItem}><FaRegHeart className={css.heroIcon} size=\"1.3em\" /></button>\n                                        <button className={css.heroOptionItem}><FaRegClock className={css.heroIcon}  size=\"1.3em\" /></button>\n                                        <button className={css.heroOptionItem}><AiOutlineLike className={css.heroIcon}  size=\"1.3em\" /></button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={css.companiesContainer}>\n                                {movie.production_companies && movie.production_companies.map(comp =>{\n                                    return <img key={comp.id} className={css.compLogos} src={`https://image.tmdb.org/t/p/w300${comp.logo_path}`} alt=\"\" />\n                                })}\n                            </div>\n                        </div>\n                    </div>\n</>)\n}\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"slider\":\"Cast_slider__fdXul\",\"actorContainer\":\"Cast_actorContainer__6hdSw\",\"role\":\"Cast_role__9xrEk\",\"name\":\"Cast_name__XM+D+\",\"img\":\"Cast_img__D7ioB\"};","import { useParams } from \"react-router-dom\"\nimport { useState, useEffect, useRef } from \"react\"\nimport * as API from '../../../services/movies-api'\nimport Slider from \"react-slick\";\n\nimport css from './Cast.module.css'\n\n\nconst Cast = () =>{\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 5,\n        slidesToScroll: 3,\n        arrows: true,\n      };\n\n    const {movieId} = useParams()\n    const [cast, setCast] = useState(null)\n    const effectRun = useRef(true)\n\n    useEffect(() => {\n        const getMovie = async () =>{\n           if(effectRun.current){\n               \n               try{\n                   const fetchedMovie = await API.getMovieDetails(movieId, '/credits')\n                   setCast(fetchedMovie.cast)\n               }\n               catch(error){alert('error')}\n           }\n           effectRun.current = false\n        }\n        getMovie()\n       }, [movieId])\n\n    \n    return (<>\n            {cast &&\n            <div>\n                <Slider className={css.slider} {...settings}>\n                    {cast.map(actor => { \n                            return (\n                            <li className={css.actorContainer} key={actor.id}>\n                                <div>\n                                    <img className={css.img}  src={actor.profile_path ? `https://image.tmdb.org/t/p/w200${actor.profile_path}` : 'https://cdn.pixabay.com/photo/2016/04/01/10/11/avatar-1299805_1280.png'} alt={actor.name}/>\n                                    <p className={css.name} >{ actor.name.length > 14 ? actor.name.split(' ')[1] : actor.name}</p>\n                                    <p className={css.role} >{ actor.character.length > 14 ? actor.character.split(' ')[0] : actor.character}</p>\n                                </div>\n                            </li>)    \n                    })}\n                    </Slider>\n            </div>}\n            </>)\n}   \n\n\nexport default Cast\n","// extracted by mini-css-extract-plugin\nexport default {\"infoContainer\":\"DetailsInfo_infoContainer__drlhB\",\"mainInfo\":\"DetailsInfo_mainInfo__0bEF+\",\"mainInfoBox\":\"DetailsInfo_mainInfoBox__x5Fby\",\"castInfoBox\":\"DetailsInfo_castInfoBox__TXUEc\",\"articleInfo\":\"DetailsInfo_articleInfo__eEiCN\",\"itemsList\":\"DetailsInfo_itemsList__PWGJt\",\"itemWrap\":\"DetailsInfo_itemWrap__z2hrQ\",\"companiesList\":\"DetailsInfo_companiesList__wH9nw\",\"compWrap\":\"DetailsInfo_compWrap__2KlEh\",\"imgWrap\":\"DetailsInfo_imgWrap__CjUM6\",\"companyImg\":\"DetailsInfo_companyImg__-3E+H\",\"detailsYear\":\"DetailsInfo_detailsYear__GqXSg\",\"progressBar\":\"DetailsInfo_progressBar__HspgA\",\"VideoSliderWrap\":\"DetailsInfo_VideoSliderWrap__1gzGf\",\"frameStyle\":\"DetailsInfo_frameStyle__0DG7o\",\"slider\":\"DetailsInfo_slider__Ueag8\",\"reviewsLink\":\"DetailsInfo_reviewsLink__s4ezR\"};","\nimport Slider from \"react-slick\";\nimport css from './DetailsInfo.module.css'\n\n\n const VideosSlider = ({movieVids}) =>{\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        arrows: true,\n      };\n\n    \n    return (<>\n            {movieVids &&\n            <div>\n                <Slider className={css.slider} {...settings}>\n                    {movieVids?.results?.map(vid =>{\n                            return (\n                                <iframe className={css.frameStyle} key={vid.key} title={vid.name} allowFullScreen={true}\n                                    src={`https://www.youtube.com/embed/${vid.key}`}>\n                                </iframe>                      \n                            )\n                        })}\n                    </Slider>\n            </div>}\n            </>)\n}   \n\n\nexport default VideosSlider\n","import Cast from 'components/DetailsComponents/Cast/Cast'\nimport css from './DetailsInfo.module.css'\nimport { Link } from 'react-router-dom';\nimport { FaRegCalendar } from \"react-icons/fa6\";\nimport VideosSlider from './VideosSlider';\n\n\nexport const DetailsInfo = ({movie, movieVids}) =>{\n\n    const ratingBarStyle = {\n        background: \n            `radial-gradient(closest-side, #1A1A1A 79%, transparent 80% 100%), conic-gradient(rgb(243, 208, 86) ${movie.vote_average && movie.vote_average.toFixed(1) * 10}%, #2f2f2f 0)`\n    }\n    \n    return(\n        <div className={css.infoContainer}>\n            <div className={css.mainInfo}>\n                <div className={css.mainInfoBox}>\n                    <span>Description</span>\n                    <p>{movie.overview}</p>\n                </div>\n                <div className={`${css.mainInfoBox} ${css.castInfoBox}`}>\n                    <span>Cast</span>\n                    <Cast></Cast>\n                </div>\n                <div className={css.mainInfoBox}>\n                    <span>Videos</span>\n                    {console.log(movieVids)}\n                    <div className={css.VideoSliderWrap}>\n                        <VideosSlider movieVids={movieVids}></VideosSlider>\n                    </div>\n                  \n                    \n                </div>\n                <div className={css.mainInfoBox}>\n                    <span>Reviews</span>\n                    \n                    <Link className={css.reviewsLink} to='reviews'>Click to see reviews</Link>\n                    \n                </div>\n            </div>\n            <div className={css.articleInfo}>\n                <div className={css.articleBlock}>\n                    <p><FaRegCalendar /> Released year</p>\n                    <span className={css.detailsYear}>{ movie?.release_date && movie.release_date.split('-')[0]}</span>\n                </div>\n                <div className={css.articleBlock}>\n                    <p>Rating</p>\n                    <div>\n                        <div style ={ratingBarStyle} className={css.progressBar}>\n                            <span>{movie?.vote_average?.toFixed(1)}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className={css.articleBlock}>\n                    <p>genres</p>\n                    <ul className={css.itemsList}>\n                        {movie?.genres?.map(genre =>{\n                            return(\n                             <div key={genre.id} className={css.itemWrap}>\n                                {genre.name}\n                            </div>\n                        )})}\n                    </ul>\n                </div>\n                <div className={css.articleBlock}>\n                    <p>Languages</p>\n                    <ul className={css.itemsList}>\n                        {movie?.spoken_languages?.map(lang => {\n                            return(\n                                <div key={lang.name} className={css.itemWrap}>\n                                {lang.name}\n                                </div>\n                            )\n                        })}\n                    </ul>\n                </div>\n                <div className={css.articleBlock}>\n                    <p>Production studios</p>\n                    <ul className={css.companiesList}>\n                        {movie?.production_companies?.map(company => {\n                            return(\n                                <div key={company.id} className={`${css.itemWrap} ${css.compWrap}`}>\n                                     <span className={css.companyName}>{company.name}</span>\n                                    <div className={css.imgWrap}>\n                                        <img className={css.companyImg} src={company.logo_path ? `https://image.tmdb.org/t/p/w300${company.logo_path}` : `https://pic.onlinewebfonts.com/thumbnails/icons_360869.svg`} alt=\"\" />\n                                    </div>\n                                </div>         \n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}","import { useParams, Outlet } from 'react-router-dom'\nimport {useState, useEffect, useRef, Suspense} from 'react'\nimport * as API from '../../services/movies-api'\nimport Notiflix from 'notiflix';\n\nimport { DetailsHero } from '../../components/DetailsComponents/DetailsHero/DetailsHero';\nimport { DetailsInfo } from 'components/DetailsComponents/DetailsInfo/DetailsInfo';\n\nconst MovieDetails = () =>{\n\n    const [movie, setMovie] = useState({})\n    const [movieVids, setMovieVids] = useState({})\n    const {movieId} = useParams()\n    const effectRun = useRef(true)\n\n\n    useEffect(() => {\n        window.scrollTo({top: 0, left: 0});\n     const getMovie = async () =>{\n        if(effectRun.current){\n            effectRun.current = false\n            try{\n                const fetchedMovie = await API.getMovieDetails(movieId)\n                setMovie(fetchedMovie)\n\n                const movieVideos = await API.getMovieDetails(movieId, '/videos')\n                setMovieVids(movieVideos)\n            }\n            catch(error){Notiflix.Notify.failure('Error')}\n        }\n     }\n     getMovie()\n    }, [movieId])\n\n\n    return (\n        <>\n            <DetailsHero movie={movie} movieVids = {movieVids}/>    \n            <DetailsInfo movie={movie} movieVids = {movieVids}/>\n                <div>\n                    \n                </div>\n                <Suspense fallback={<div>Loading....</div>}>\n                    <Outlet/>\n                </Suspense>\n            \n        </>\n        \n    )\n}\n\nexport default MovieDetails\n\n"],"names":["TrailerModal","_ref","_movieVids$results","onClose","movieVids","firstRender","useRef","trailerUrl","results","find","element","name","includes","React","originalStyle","window","getComputedStyle","document","body","overflow","style","useEffect","current","addEventListener","handleKeyDown","removeEventListener","e","code","_jsx","className","css","onClick","target","currentTarget","children","_jsxs","title","allowFullScreen","src","concat","key","color","fontSize","paddingTop","handleButtonClose","IoClose","size","DetailsHero","_location$state$from","_location$state","movie","location","useLocation","backLinkLocation","state","from","modalIsOpen","setModalIsOpen","useState","_Fragment","console","log","heroContainer","backgroundImage","backdrop_path","Link","backButton","to","IoMdArrowRoundBack","posterWrap","poster","poster_path","alt","heroTextContainer","heroTitle","heroDesc","overview","heroNav","OpenModal","heroButton","FaCirclePlay","closeModal","heroOptions","heroOptionItem","FaRegHeart","heroIcon","FaRegClock","AiOutlineLike","companiesContainer","production_companies","map","comp","compLogos","logo_path","id","Cast","movieId","useParams","cast","setCast","effectRun","async","fetchedMovie","API","error","alert","getMovie","Slider","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","actor","profile_path","length","split","character","slider","vid","frameStyle","DetailsInfo","_movie$vote_average","_movie$genres","_movie$spoken_languag","_movie$production_com","ratingBarStyle","background","vote_average","toFixed","infoContainer","mainInfo","mainInfoBox","castInfoBox","VideoSliderWrap","VideosSlider","reviewsLink","articleInfo","articleBlock","FaRegCalendar","detailsYear","release_date","progressBar","itemsList","genres","genre","itemWrap","spoken_languages","lang","companiesList","company","compWrap","companyName","imgWrap","companyImg","MovieDetails","setMovie","setMovieVids","scrollTo","top","left","movieVideos","Notiflix","failure","Suspense","fallback","Outlet"],"sourceRoot":""}