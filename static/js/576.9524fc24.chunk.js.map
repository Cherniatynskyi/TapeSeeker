{"version":3,"file":"static/js/576.9524fc24.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"formButton\":\"SearchBar_formButton__C-ydM\",\"input\":\"SearchBar_input__bIy50\"};","import { useState } from \"react\";\nimport css from './SearchBar.module.css'\nimport Notiflix from 'notiflix';\n\nexport const SearchBar = ({onSubmit}) => {\n    const [query, setQuery] = useState('')\n\n    const handleChange = (e) => {\n        setQuery(e.target.value)\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (!query) {\n        Notiflix.Notify.failure('Enter your search term')\n        return\n    }\n        onSubmit({query})\n    }\n\n  \n        return (\n            <header >\n                <form className={css.form} onSubmit={handleSubmit}>\n                    <button className={css.formButton} type=\"submit\">\n                    <span>Search</span>\n                    </button>\n                    <input\n                        className={css.input}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies\"\n                        onChange={handleChange}\n                        value={query}\n                    />\n                </form>\n            </header>\n        )\n}","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"title\":\"MoviesList_title__PB2c8\",\"moviesListItem\":\"MoviesList_moviesListItem__OFqms\",\"img\":\"MoviesList_img__v4jFC\"};","import css from './MoviesList.module.css'\nimport {Link} from 'react-router-dom'\n\nexport const MoviesList = ({movies, location}) =>{\n\n    return (<ul className={css.moviesList}>\n        {movies ? movies.map(movie => {\n            return(\n             <Link key={movie.id} to={location.pathname === '/' ? `movies/${movie.id}`: `${movie.id}`} state={{from: location}}>\n                <li className={css.moviesListItem}>\n                    <img className={css.img} src={movie.poster_path ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`: 'https://eticketsolutions.com/demo/themes/e-ticket/img/movie.jpg'} alt={movie.title}/>\n                </li>\n            </Link>)\n        }): <h1 className={css.title}>Search for Movies</h1>}\n    </ul>  )\n}\n\n\n","import { useState, useEffect, useRef} from \"react\"\nimport * as API from '../../services/movies-api'\nimport { SearchBar } from \"../../components/SearchBar/SearchBar\"\nimport {useSearchParams, useLocation} from 'react-router-dom'\nimport { MoviesList } from \"components/MoviesList/MoviesList\"\nimport Notiflix from 'notiflix';\n\nconst Movies = () =>{\n    const [searchResult, setSearchResult] = useState(null)\n    const [page, setPage] = useState(1)\n    const location = useLocation()\n    const [searchParams, setSearchParams] = useSearchParams();\n    const firstRender = useRef(false)\n    \n    useEffect(() => {\n        const q = searchParams.get('q')    \n                const getMoviesList = async()=>{\n                    try{   \n                        if(firstRender.current === true){\n                            const fetchedMovie = await API.getMoviesList(`/movie/popular`, page)\n                            setSearchResult(prevState => prevState? [...prevState, ...fetchedMovie] : fetchedMovie)\n                            console.log(\"movies\")\n                        }\n                        firstRender.current = true\n                        return \n                  \n                    }\n                    catch(error){Notiflix.Notify.failure('Error')}\n        \n                }\n                const getMoviesByQuery = async(q) =>{\n                \n                    try{\n                        const fetchedMovie = await API.searchMovies(q, page)\n                        setSearchResult(prevState => prevState? [...prevState, ...fetchedMovie] : fetchedMovie)\n                        console.log(\"Fetched\")\n                    }\n                    catch(error){Notiflix.Notify.failure('Error')}\n                }\n                if(!q){\n                    getMoviesList()\n                    return\n                }\n                getMoviesByQuery(q)\n        return()=>{\n            firstRender.current = true\n        }\n\n       }, [searchParams, page])\n\n    \n\n    \n    const formHandler = ({ query }) => {\n        setPage(1)\n        setSearchParams({q: query})\n        setSearchResult(null)\n    }\n\n    const handlePageChange = () =>{\n        setPage(prev => prev+1)\n    }\n    \n\n    \n    return ( \n        <div>\n            <SearchBar onSubmit={formHandler}/>\n            <MoviesList movies={searchResult} location={location}/> \n            <button onClick={handlePageChange}>load more</button>\n        </div>)\n}   \n\nexport default Movies\n\n","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'f331f91cb9692f1df13f3cba648b2743'\n\nexport const getMovies = async (type) =>{\n    const trendMovies = await axios({ url: `${BASE_URL}${type}?api_key=${API_KEY}`, method: \"GET\" })\n    return trendMovies.data.results;\n\n}\n\nexport const getMoviesList = async (type , page) =>{\n    const movieList = await axios({ url: `${BASE_URL}${type}?api_key=${API_KEY}&page=${page}`, method: \"GET\" })\n    return movieList.data.results;\n\n}\n\nexport const getMovieDetails = async(movieId, type) => {\n    const response = await axios({ url: `${BASE_URL}/movie/${movieId}${type}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data\n}\n\nexport const searchMovies = async(query, page) => {\n    const response = await axios({ url: `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`, method: \"GET\" })\n    return response.data.results\n}\n\n"],"names":["SearchBar","_ref","onSubmit","query","setQuery","useState","_jsx","children","_jsxs","className","css","e","preventDefault","Notiflix","failure","type","autoComplete","autoFocus","placeholder","onChange","target","value","MoviesList","movies","location","map","movie","Link","to","pathname","concat","id","state","from","src","poster_path","alt","title","Movies","searchResult","setSearchResult","page","setPage","useLocation","searchParams","setSearchParams","useSearchParams","firstRender","useRef","useEffect","q","get","async","fetchedMovie","API","prevState","console","log","error","getMoviesByQuery","current","getMoviesList","onClick","handlePageChange","prev","BASE_URL","API_KEY","getMovies","axios","url","method","data","results","getMovieDetails","movieId","searchMovies"],"sourceRoot":""}