{"version":3,"file":"static/js/565.1a079e3e.chunk.js","mappings":"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","sources":["webpack://tapeseeker/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://tapeseeker/./src/components/MoviesList/MoviesList.module.css?de3d","webpack://tapeseeker/./src/components/MoviesList/MoviesList2.module.css?f581","components/MoviesList/MoviesList.jsx","webpack://tapeseeker/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"formButton\":\"SearchBar_formButton__C-ydM\",\"input\":\"SearchBar_input__bIy50\"};","import { useState } from \"react\";\nimport css from './SearchBar.module.css'\nimport Notiflix from 'notiflix';\nimport { IoSearch } from \"react-icons/io5\";\n\nexport const SearchBar = ({onSubmit}) => {\n    const [query, setQuery] = useState('')\n\n    const handleChange = (e) => {\n        setQuery(e.target.value)\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (!query) {\n        Notiflix.Notify.failure('Enter your search term')\n        return\n        }\n        onSubmit({query})\n        setQuery('')\n    }\n\n  \n        return (\n                <form className={css.form} onSubmit={handleSubmit} >\n                    <button className={css.formButton} type=\"submit\">\n                    <IoSearch size=\"1.3em\"/>\n                    </button>\n                    <input\n                        className={css.input}\n                        type=\"text\"\n                        placeholder=\"Search movies\"\n                        onChange={handleChange}\n                        value={query}\n                    />\n                </form>\n        )\n}","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"movieList2\":\"MoviesList_movieList2__Au0SC\",\"title\":\"MoviesList_title__PB2c8\",\"moviesListItem\":\"MoviesList_moviesListItem__OFqms\",\"img\":\"MoviesList_img__v4jFC\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\",\"thumbsContainer\":\"MoviesList_thumbsContainer__8kNDv\",\"thumb\":\"MoviesList_thumb__xQkCm\"};","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList2_moviesList__tXi97\",\"moviesListItem\":\"MoviesList2_moviesListItem__NXhtt\",\"img\":\"MoviesList2_img__bTQSX\",\"textContainer\":\"MoviesList2_textContainer__DwkmC\",\"movieTitle\":\"MoviesList2_movieTitle__k7FX4\",\"movieOverview\":\"MoviesList2_movieOverview__B+YnM\",\"thumbsContainer\":\"MoviesList2_thumbsContainer__4DeK7\",\"thumb\":\"MoviesList2_thumb__h+Al6\",\"actionButtonsWrap\":\"MoviesList2_actionButtonsWrap__YtzlU\",\"actionButton\":\"MoviesList2_actionButton__kBwSa\"};","import stylesForGrid from './MoviesList.module.css'\nimport stylesForList from './MoviesList2.module.css'\nimport {Link} from 'react-router-dom'\nimport { CiCalendarDate } from \"react-icons/ci\";\nimport { MdStar } from \"react-icons/md\";\nimport { MdLanguage } from \"react-icons/md\";\n\nexport const MoviesList = ({movies, location, listStyle}) =>{\n    var css = listStyle ? stylesForGrid : stylesForList\n\n    return (<ul className={css.moviesList}>\n        {movies ? movies?.map(movie => {\n            return(\n             <Link className={css.moviesListItem} key={movie.id} to={location.pathname === '/' ? `movies/${movie.id}`: `${movie.id}`} state={{from: location}}>\n                    {listStyle ? \n                    <>\n                        <img className={css.img} src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`: 'https://eticketsolutions.com/demo/themes/e-ticket/img/movie.jpg'} alt={movie.title}/>\n                        <h3 className={css.movieTitle} >{movie.title ? movie.title : movie.name}</h3>\n                        <div className={css.thumbsContainer}>\n                                <span className={css.thumb}> <CiCalendarDate size=\"1.2em\" /> {movie.release_date ? movie.release_date.split(\"-\")[0] : movie?.first_air_date?.split(\"-\")[0]}</span>\n                                <span className={css.thumb}> <MdStar size=\"1.2em\" />{movie.vote_average.toFixed(1)}</span>\n                                <span className={css.thumb}> <MdLanguage size=\"1.2em\" />{movie.original_language}</span>\n                        </div>\n                    </>\n                     :\n                    <>\n                        <img className={css.img} src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`: 'https://eticketsolutions.com/demo/themes/e-ticket/img/movie.jpg'} alt={movie.title}/>\n                        <div className={css.textContainer}>\n                            <h3 className={css.movieTitle} >{movie.title ? movie.title : movie.name}</h3>\n                            <p className={css.movieOverview}>{movie.overview}</p>\n                            <div className={css.thumbsContainer}>\n                                <span className={css.thumb}> <CiCalendarDate size=\"1.2em\" /> {movie.release_date ? movie.release_date.split(\"-\")[0] : movie?.first_air_date?.split(\"-\")[0]}</span>\n                                <span className={css.thumb}> <MdStar size=\"1.2em\" />{movie.vote_average.toFixed(1)}</span>\n                                <span className={css.thumb}> <MdLanguage size=\"1.2em\" />{movie.original_language}</span>\n                            </div>\n                            <div className={css.actionButtonsWrap}>\n                                {console.log(movie)}\n                                <button className={css.actionButton}>Add to watchlist</button>\n                                <button className={css.actionButton}>Add to favorite</button>\n                            </div>\n                        </div>\n                        \n                    </>\n                    }\n            </Link>)\n        }): <h1 className={css.title}>Search for Movies</h1>}\n    </ul>  )\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesHeader\":\"Movies_moviesHeader__oVnRS\",\"filterMenu\":\"Movies_filterMenu__mF2Qt\",\"listStyle\":\"Movies_listStyle__KJzzC\",\"listStyleButton\":\"Movies_listStyleButton__jAuUG\",\"styleButtonActive\":\"Movies_styleButtonActive__n7IfG\",\"loadButton\":\"Movies_loadButton__M-KkQ\",\"backToTopButton\":\"Movies_backToTopButton__7yEpE\",\"mediaButtonContainer\":\"Movies_mediaButtonContainer__MvXa2\",\"mediaButton\":\"Movies_mediaButton__mlGKA\",\"mediaButtonActive\":\"Movies_mediaButtonActive__Dd-q0\",\"pagination\":\"Movies_pagination__wqHtT\",\"paginationButton\":\"Movies_paginationButton__abiwn\",\"paginationPage\":\"Movies_paginationPage__1TCym\",\"loadingOverlay\":\"Movies_loadingOverlay__LQyG1\",\"loadingText\":\"Movies_loadingText__z-CtK\"};","import { useState, useEffect} from \"react\"\nimport * as API from '../../services/movies-api'\nimport { SearchBar } from \"../../components/SearchBar/SearchBar\"\nimport {useSearchParams, useLocation, useNavigate } from 'react-router-dom'\nimport { MoviesList } from \"components/MoviesList/MoviesList\"\nimport css from './Movies.module.css'\nimport Notiflix from 'notiflix';\nimport Select from 'react-select';\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { FaList } from \"react-icons/fa\";\nimport { IoGrid } from \"react-icons/io5\";\nimport { Link } from \"react-router-dom\"\nimport { ColorRing } from \"react-loader-spinner\"\n\nconst Movies = () =>{\n    const [mediaType, setMediaType] = useState(true)\n    const [listStyle, setListStyle] = useState(true)\n    const [isLoading, setIsLoading] = useState(false)\n    const [searchResult, setSearchResult] = useState(null)\n    const [selectedGenre, setSelectedGenre] = useState(null)\n    const [page, setPage] = useState(1)\n    \n\n    const location = useLocation()\n    const navigate = useNavigate();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const type = location.pathname === \"/movies\" ? \"movie\" : \"tv\"\n\n    const genreOptions = [\n        { value: 'all', label: 'All' },\n        { value: '28', label: 'Action' },\n        { value: '35', label: 'Comedy' },\n        { value: '80', label: 'Crime' },\n        { value: '99', label: 'Documentary' },\n        { value: '18', label: 'Drama' },\n        { value: '10751', label: 'Family' },\n        { value: '14', label: 'Fantasy' },\n        { value: '36', label: 'Histroy' },\n        { value: '27', label: 'Horror' },\n        { value: '10402', label: 'Music' },\n        { value: '878', label: 'Sci-fi' },\n        { value: '53', label: 'Thriler' },\n        { value: '10752', label: 'War' },\n      ];\n\n\n    useEffect(() =>{\n        \n        const q = searchParams.get('q')  \n        const fetchContent = async() =>{\n            setIsLoading(true)\n            if(type === \"movie\"){\n                if(!selectedGenre || selectedGenre.label === 'All'){\n                    const fetchedMovie = await API.getMoviesList(`/discover/movie`, page)\n                    setSearchResult(fetchedMovie)\n                    console.log(fetchedMovie)  \n                } \n                else{\n                    const fetchedMovie = await API.getMoviesByGenre('movie', selectedGenre.value, page)\n                    setSearchResult(fetchedMovie.results)\n                    console.log(fetchedMovie.results) \n                }\n                console.log(selectedGenre) \n            }\n            else {\n                const fetchedMovie = await API.getMoviesList(`/trending/tv/day`, page)\n                setSearchResult(fetchedMovie)\n            }\n            setIsLoading(false)\n        }\n        const getMoviesByQuery = async(q) =>{  \n            try{\n                setIsLoading(true)\n                const fetchedMovie = await API.searchMovies(q, page, type)\n                if(fetchedMovie.length === 0){\n                    Notiflix.Notify.failure(`Could't find \"${q}\"`)\n                    navigate('/movies')\n                    return\n                }\n                setSearchResult(fetchedMovie)\n                setIsLoading(false)\n            }\n            catch(error){Notiflix.Notify.failure('Error')}\n        }\n        if(q){\n            getMoviesByQuery(q)\n            return\n        }\n        fetchContent()\n        \n    }, [page, searchParams, type, navigate, selectedGenre])\n\n\n    const onBackToTop = () =>{\n        window.scrollTo({top: 0, left: 0, behavior: \"smooth\",});\n    }\n    \n    const formHandler = ({ query }) => {\n        setPage(1)\n        setSearchParams({q: query})\n        setSearchResult(null)\n        setSelectedGenre(null)\n    }\n\n    const handleMediaType =(e)=>{\n        if((mediaType && e.target.textContent === \"Movies\") || (!mediaType && e.target.textContent === \"Shows\")){\n           return \n        }\n        setSearchResult(null)\n        setPage(1)\n        setMediaType(prevState => !prevState)\n        \n    }\n\n    const handleChangePage = (e)=>{\n        onBackToTop()\n        if(e.target.id === 'dec'){\n            setPage(prev => prev - 1)  \n        }\n        else{\n            setPage(prev => prev + 1) \n        }\n    }\n\n    const handleListChange = (e)=>{\n        if((listStyle && e.currentTarget.id === \"grid\") || (!listStyle && e.currentTarget.id === \"list\")){\n            return \n         }\n         setListStyle(prev => !prev)\n         console.log(\"Change style\")\n         console.log(searchResult)\n    }\n\n    const handleChangeGenre = (e) =>{\n        console.log(e)\n        setSelectedGenre(e)\n        setPage(1)\n    }\n    \n    return ( \n        <>\n            {isLoading && <div className={css.loadingOverlay}><div className={css.loadingText}><ColorRing colors={['#F3D056', '#F3D056', '#F3D056', '#F3D056', '#F3D056']}/></div></div>}\n            <div className={css.moviesHeader}>\n                <SearchBar onSubmit={formHandler}/>\n\n                <div className={css.mediaButtonContainer}>\n                    <Link to=\"/movies\" onClick={(e)=>handleMediaType(e)} className={`${css.mediaButton} ${type === \"movie\" && css.mediaButtonActive}`}>Movies</Link>\n                    <Link to=\"/tv\" onClick={(e)=>handleMediaType(e)} className={`${css.mediaButton} ${type === \"tv\" && css.mediaButtonActive}`}>Shows</Link>\n                </div>\n                <ul className={css.filterMenu}>\n                    <Select\n                        placeholder = \"All\"\n                        value = {selectedGenre}\n                        onChange={(e)=>handleChangeGenre(e)}\n                        options={genreOptions}\n                    />\n                        <li>year filter</li>\n                        <li>rating</li>\n                </ul>\n                <ul className={css.listStyle}>\n                    <button onClick={handleListChange} id=\"grid\" className={`${css.listStyleButton} ${listStyle && css.styleButtonActive}`}><IoGrid /></button>\n                    <button onClick={handleListChange} id=\"list\" className={`${css.listStyleButton} ${!listStyle && css.styleButtonActive}`}><FaList /></button>\n                </ul>\n            </div>\n            <MoviesList movies={searchResult} location={location} currentPage={page} listStyle={listStyle}/> \n            {!isLoading && <div className={css.pagination}>\n                <button className={css.paginationButton} disabled={page === 1} onClick={(e)=>handleChangePage(e)} id=\"dec\">Back</button>\n                <span className={css.paginationPage}>{page}</span>\n                <button className={css.paginationButton} onClick={(e)=>handleChangePage(e)} id=\"inc\">Next</button>\n            </div>}\n            <button onClick={onBackToTop} className={css.backToTopButton}><FaArrowUp size=\"2em\"/></button>\n            </>)\n}   \n\nexport default Movies\n\n"],"names":["SearchBar","_ref","onSubmit","query","setQuery","useState","_jsxs","className","css","e","preventDefault","Notiflix","failure","children","_jsx","type","IoSearch","size","placeholder","onChange","target","value","MoviesList","movies","location","listStyle","stylesForGrid","stylesForList","moviesList","map","movie","_movie$first_air_date","_movie$first_air_date2","Link","moviesListItem","to","pathname","concat","id","state","from","_Fragment","img","src","poster_path","alt","title","movieTitle","name","thumbsContainer","thumb","CiCalendarDate","release_date","split","first_air_date","MdStar","vote_average","toFixed","MdLanguage","original_language","textContainer","movieOverview","overview","actionButtonsWrap","console","log","actionButton","Movies","mediaType","setMediaType","setListStyle","isLoading","setIsLoading","searchResult","setSearchResult","selectedGenre","setSelectedGenre","page","setPage","useLocation","navigate","useNavigate","searchParams","setSearchParams","useSearchParams","useEffect","q","get","async","fetchedMovie","API","length","error","getMoviesByQuery","label","results","fetchContent","onBackToTop","window","scrollTo","top","left","behavior","handleMediaType","textContent","prevState","handleChangePage","prev","handleListChange","currentTarget","ColorRing","colors","onClick","Select","handleChangeGenre","options","IoGrid","FaList","currentPage","disabled","FaArrowUp"],"sourceRoot":""}