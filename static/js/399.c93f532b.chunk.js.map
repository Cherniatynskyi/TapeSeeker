{"version":3,"file":"static/js/399.c93f532b.chunk.js","mappings":"+NACA,QAAmC,kCAAnC,EAAuF,iCAAvF,EAAqI,4BAArI,EAA6K,2BAA7K,EAAuN,8BAAvN,EAAkQ,4BAAlQ,EAA+S,gCAA/S,EAA4V,4BAA5V,EAAsY,6BAAtY,EAAmb,+BAAnb,EAAue,oC,aCOve,MAiEA,EAjEgBA,KACZ,MAAM,QAACC,IAAWC,EAAAA,EAAAA,OACZ,KAACC,IAAQD,EAAAA,EAAAA,OACRE,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IACjCC,GAAYC,EAAAA,EAAAA,SAAO,IAEzBC,EAAAA,EAAAA,YAAU,KACWC,WACd,GAAGH,EAAUI,QAAQ,CACpBJ,EAAUI,SAAU,EACjB,IACI,GAAGV,EAAQ,CACN,MAAMW,QAAqBC,EAAAA,GAAoBZ,EAAS,YACxDI,EAAWO,EAAaE,QAC7B,KACI,CACC,MAAMF,QAAqBC,EAAAA,GAAiBV,EAAM,YAClDE,EAAWO,EAAaE,QAC7B,CACJ,CACA,MAAMC,GAAOC,MAAM,QAAQ,CAC/B,GAEHC,EAAU,GACR,CAAChB,EAASE,IAOhB,OACIe,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAqBH,SACZ,IAAnBf,EAAQmB,OAAenB,EAAQoB,KAAIC,IAChC,MAAMC,EAAiB,CACnBC,WAAW,sGAADC,QACsG,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQI,eAAeC,SAAoD,GAA1CL,EAAOI,eAAeC,OAAOC,QAAQ,GAAO,mBAGrL,SAACC,EAAQ,OAAEF,EAAM,YAAEG,GAAeR,EAAOI,eAC/C,OACAX,EAAAA,EAAAA,MAAA,MAAIG,UAAWC,EAAcH,SAAA,EACzBD,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAoBH,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeH,SAC1Bc,GAAcb,EAAAA,EAAAA,KAAA,OAAKc,IAAG,kCAAAN,OAAoCK,GAAeE,IAAI,MAAQf,EAAAA,EAAAA,KAACgB,EAAAA,IAAM,CAACC,MAAM,QAAQC,KAAK,WAGrHpB,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAiBH,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAeH,SAAEM,EAAOc,UACtCrB,EAAAA,EAAAA,MAAA,QAAMG,UAAWC,EAAmBH,SAAA,CAAC,IAAEa,SAE3CZ,EAAAA,EAAAA,KAAA,OAAKoB,MAAOd,EAAgBL,UAAWC,EAAgBH,UACnDC,EAAAA,EAAAA,KAAA,QAAAD,SAAa,OAANW,QAAM,IAANA,OAAM,EAANA,EAAQC,QAAQ,WAG/BX,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAeH,SAAEM,EAAOgB,YAdPhB,EAAOiB,GAerC,KACLxB,EAAAA,EAAAA,MAAA,KAAGG,UAAWC,EAAkBH,SAAA,CAAC,mBAAeC,EAAAA,EAAAA,KAACuB,EAAAA,IAAa,CAACL,KAAK,QAAQD,MAAM,gBAE1FjB,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACvB,UAAWC,EAAwBuB,GAAI5C,EAAO,WAAA2B,OAAc3B,GAAO,OAAA2B,OAAYzB,GAAQ2C,QAlCzEC,KACpB1C,EAAW,IACX2C,OAAOC,SAAS,CAACC,IAAK,EAAGC,KAAM,EAAGC,SAAU,UAAU,EAgCkEjC,SAAC,YACvH,C","sources":["webpack://goit-react-hw-05-movies/./src/components/DetailsComponents/Reviews/Reviews.module.css?e6eb","components/DetailsComponents/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__nibM8\",\"reviewTitleWrap\":\"Reviews_reviewTitleWrap__KT-Mm\",\"userAvatar\":\"Reviews_userAvatar__pzQA2\",\"reviewBox\":\"Reviews_reviewBox__vXpot\",\"userInfoWrap\":\"Reviews_userInfoWrap__G6y3t\",\"authorName\":\"Reviews_authorName__xbWvi\",\"authorUsername\":\"Reviews_authorUsername__GsSqC\",\"reviewText\":\"Reviews_reviewText__jMTOJ\",\"progressBar\":\"Reviews_progressBar__l3oWY\",\"noReviewsText\":\"Reviews_noReviewsText__uj3C3\",\"closeReviewsButton\":\"Reviews_closeReviewsButton__-GEYb\"};","import { useParams, Link } from \"react-router-dom\"\nimport { useState, useEffect, useRef } from \"react\"\nimport * as API from '../../../services/movies-api'\nimport { FaUser } from \"react-icons/fa\";\nimport { PiMaskSadFill } from \"react-icons/pi\";\nimport css from './Reviews.module.css'\n\n\nconst Reviews = () =>{\n    const {movieId} = useParams()\n    const {tvId} = useParams()\n    const [reviews, setReviews] = useState([])\n    const effectRun = useRef(true)\n\n    useEffect(() => {\n        const getMovie = async () =>{\n           if(effectRun.current){\n            effectRun.current = false\n               try{\n                   if(movieId){\n                        const fetchedMovie = await API.getMovieDetails(movieId, '/reviews')\n                        setReviews(fetchedMovie.results)\n                   }\n                   else{\n                        const fetchedMovie = await API.getTvDetails(tvId, '/reviews')\n                        setReviews(fetchedMovie.results)\n                   }\n               }\n               catch(error){alert('error')}\n           }\n        }\n        getMovie()\n       }, [movieId, tvId])\n\n       const handleHideReviews =()=>{\n            setReviews([])\n            window.scrollTo({top: 0, left: 0, behavior: \"smooth\"});\n       }\n\n    return (\n        <div>\n            <ul className={css.reviewsContainer}>\n                {reviews.length !== 0 ? reviews.map(review => {\n                    const ratingBarStyle = {\n                        background: \n                            `radial-gradient(closest-side, #1A1A1A 79%, transparent 80% 100%), conic-gradient(rgb(243, 208, 86) ${review?.author_details.rating && review.author_details.rating.toFixed(1) * 10}%, #2f2f2f 0)`\n                    }\n\n                    const {username, rating, avatar_path} = review.author_details\n                    return(\n                    <li className={css.reviewBox} key={review.id}>\n                        <div className={css.reviewTitleWrap}>\n                            <div className={css.userAvatar}>\n                                {avatar_path ? <img src={`https://image.tmdb.org/t/p/w185${avatar_path}`} alt=\"\" /> : <FaUser color=\"white\" size=\"2em\"/>}\n                                \n                            </div>\n                            <div className={css.userInfoWrap}>\n                                <p className={css.authorName}>{review.author}</p>\n                                <span className={css.authorUsername}>@{username}</span>\n                            </div>\n                            <div style={ratingBarStyle} className={css.progressBar}>\n                                <span>{rating?.toFixed(1)}</span>\n                            </div>\n                        </div>\n                        <p className={css.reviewText}>{review.content}</p>\n                    </li>)\n                }): <p className={css.noReviewsText}>No reviews yet <PiMaskSadFill size=\"1.2em\" color=\"white\"/></p>}\n            </ul>\n            <Link className={css.closeReviewsButton} to={movieId ? `/movies/${movieId}` : `/tv/${tvId}`} onClick={handleHideReviews}>Close</Link>\n        </div>\n    )\n}   \n\nexport default Reviews"],"names":["Reviews","movieId","useParams","tvId","reviews","setReviews","useState","effectRun","useRef","useEffect","async","current","fetchedMovie","API","results","error","alert","getMovie","_jsxs","children","_jsx","className","css","length","map","review","ratingBarStyle","background","concat","author_details","rating","toFixed","username","avatar_path","src","alt","FaUser","color","size","author","style","content","id","PiMaskSadFill","Link","to","onClick","handleHideReviews","window","scrollTo","top","left","behavior"],"sourceRoot":""}