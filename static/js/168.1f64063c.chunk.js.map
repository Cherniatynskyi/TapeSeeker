{"version":3,"file":"static/js/168.1f64063c.chunk.js","mappings":"iMACA,QAAmC,kCAAnC,EAAoF,8BAApF,EAA+H,4B,aCK/H,MAkCA,EAlCgBA,KACZ,MAAM,QAACC,IAAWC,EAAAA,EAAAA,OACXC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IACjCC,GAAYC,EAAAA,EAAAA,SAAO,GAgBzB,OAdAC,EAAAA,EAAAA,YAAU,KACWC,WACd,GAAGH,EAAUI,QAAQ,CACpBJ,EAAUI,SAAU,EACjB,IACI,MAAMC,QAAqBC,EAAAA,GAAoBX,EAAS,YACxDG,EAAWO,EAAaE,QAC5B,CACA,MAAMC,GAAOC,MAAM,QAAQ,CAC/B,GAEHC,EAAU,GACR,CAACf,KAGHgB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACKC,QAAQC,IAAIjB,IACbkB,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAqBL,SACZ,IAAnBf,EAAQqB,OAAerB,EAAQsB,KAAIC,IACzBT,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACHG,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAiBL,SAAEQ,EAAOC,UACxCN,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAeL,SAAA,GAAAU,OAAKF,EAAOG,aAF7BH,EAAOI,OAIvBT,EAAAA,EAAAA,KAAA,KAAAH,SAAG,uBAET,C,mEClCd,MAAMa,EAAW,+BACXC,EAAU,mCAEHC,EAAYxB,gBACKyB,EAAAA,EAAAA,GAAM,CAAEC,IAAI,GAADP,OAAKG,GAAQH,OAAGQ,EAAI,aAAAR,OAAYI,GAAWK,OAAQ,SACrEC,KAAKzB,QAIf0B,EAAkB9B,MAAMR,EAASmC,WACnBF,EAAAA,EAAAA,GAAM,CAAEC,IAAI,GAADP,OAAKG,EAAQ,WAAAH,OAAU3B,GAAO2B,OAAGQ,EAAI,aAAAR,OAAYI,GAAWK,OAAQ,SACtFC,KAGPE,EAAe/B,gBACDyB,EAAAA,EAAAA,GAAM,CAAEC,IAAI,GAADP,OAAKG,EAAQ,0BAAAH,OAAyBI,EAAO,WAAAJ,OAAUa,GAASJ,OAAQ,SAC1FC,KAAKzB,O","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__bHfUv\",\"reviewAuthor\":\"Reviews_reviewAuthor__f4lkL\",\"reviewText\":\"Reviews_reviewText__lxUoA\"};","import { useParams } from \"react-router-dom\"\nimport { useState, useEffect, useRef } from \"react\"\nimport * as API from '../../services/movies-api'\nimport css from './Reviews.module.css'\n\n\nconst Reviews = () =>{\n    const {movieId} = useParams()\n    const [reviews, setReviews] = useState([])\n    const effectRun = useRef(true)\n\n    useEffect(() => {\n        const getMovie = async () =>{\n           if(effectRun.current){\n            effectRun.current = false\n               try{\n                   const fetchedMovie = await API.getMovieDetails(movieId, '/reviews')\n                   setReviews(fetchedMovie.results)\n               }\n               catch(error){alert('error')}\n           }\n        }\n        getMovie()\n       }, [movieId])\n\n    return (\n        <div>\n            {console.log(reviews)}\n            <ul className={css.reviewsContainer}>\n                {reviews.length !== 0 ? reviews.map(review => {\n                    return(<li key={review.id}>\n                        <p className={css.reviewAuthor}>{review.author}</p>\n                        <p className={css.reviewText}>{`${review.content}`}</p>\n                    </li>)\n                }): <p>No reviews yet</p>}\n            </ul>\n        </div>\n    )\n}   \n\nexport default Reviews","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'f331f91cb9692f1df13f3cba648b2743'\n\nexport const getMovies = async (type) =>{\n    const trendMovies = await axios({ url: `${BASE_URL}${type}?api_key=${API_KEY}`, method: \"GET\" })\n    return trendMovies.data.results;\n\n}\n\nexport const getMovieDetails = async(movieId, type) => {\n    const response = await axios({ url: `${BASE_URL}/movie/${movieId}${type}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data\n}\n\nexport const searchMovies = async(query) => {\n    const response = await axios({ url: `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`, method: \"GET\" })\n    return response.data.results\n}\n\n"],"names":["Reviews","movieId","useParams","reviews","setReviews","useState","effectRun","useRef","useEffect","async","current","fetchedMovie","API","results","error","alert","getMovie","_jsxs","children","console","log","_jsx","className","css","length","map","review","author","concat","content","id","BASE_URL","API_KEY","getMovies","axios","url","type","method","data","getMovieDetails","searchMovies","query"],"sourceRoot":""}