{"version":3,"file":"static/js/729.9ef99ffc.chunk.js","mappings":"oLACA,QAAuB,wBAAvB,EAA4D,8BAA5D,EAAkG,yB,aCE3F,MAAMA,EAAYC,IAAiB,IAAhB,SAACC,GAASD,EAChC,MAAOE,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAiB/B,OACIC,EAAAA,EAAAA,KAAA,UAAAC,UACIC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUR,SAZjBS,IACbR,GAILQ,EAAEC,iBACFV,EAAS,CAACC,WAJVU,MAAM,yBAIW,EAMyCN,SAAA,EAC9CD,EAAAA,EAAAA,KAAA,UAAQG,UAAWC,EAAgBI,KAAK,SAAQP,UAChDD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,cAEND,EAAAA,EAAAA,KAAA,SACIG,UAAWC,EACXI,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SA3BEP,IAClBP,EAASO,EAAEQ,OAAOC,MAAM,EA2BRA,MAAOjB,QAGV,E,8BC/BrB,MA6CA,EA7CekB,KACX,MAAOC,EAAcC,IAAmBlB,EAAAA,EAAAA,UAAS,MAC3CmB,GAAYC,EAAAA,EAAAA,SAAO,IAClBC,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAAIH,EAAaI,IAAI,KACrBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACWC,WACd,GAAGV,EAAUW,QACT,IACK,GAAQ,MAALN,EACC,OAEL,MAAMO,QAAqBC,EAAAA,GAAiBR,GAC5CN,EAAgBa,EACpB,CACA,MAAME,GAAOzB,MAAM,QAAQ,CAE/BW,EAAUW,SAAU,CAAI,EAE3BI,EAAU,GACR,CAACV,IAOP,OACIrB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACID,EAAAA,EAAAA,KAACN,EAAS,CAACE,SAPCD,IAAgB,IAAf,MAAEE,GAAOF,EAC1B0B,EAAgB,CAACE,EAAG1B,GAAO,KAOvBG,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAAA,EAAI8B,WAAWjC,SACzBe,EAAeA,EAAamB,KAAIC,IAE5BpC,EAAAA,EAAAA,KAACqC,EAAAA,GAAI,CAAgBC,GAAE,GAAAC,OAAKH,EAAMI,IAAMC,MAAO,CAACC,KAAMjB,GAAUxB,UAC7DD,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAAA,OAAK2C,IAAG,kCAAAJ,OAAoCH,EAAMQ,aAAeC,IAAKT,EAAMU,WAFxEV,EAAMI,OAKlBxC,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAAA,EAAI0C,MAAM7C,SAAC,0BAEhC,C,iCC/Cd,SAAgB,WAAa,6BAA6B,cAAgB,gCAAgC,MAAQ,wB","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.css?5baa"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"formButton\":\"SearchBar_formButton__C-ydM\",\"input\":\"SearchBar_input__bIy50\"};","import { useState } from \"react\";\nimport css from './SearchBar.module.css'\n\nexport const SearchBar = ({onSubmit}) => {\n    const [query, setQuery] = useState('')\n\n    const handleChange = (e) => {\n        setQuery(e.target.value)\n    }\n\n\n    const handleSubmit = (e) => {\n        if (!query) {\n        alert(\"Enter your search term\")\n        return\n    }\n        e.preventDefault()\n        onSubmit({query})\n    }\n\n  \n        return (\n            <header >\n                <form className={css.form} onSubmit={handleSubmit}>\n                    <button className={css.formButton} type=\"submit\">\n                    <span>Search</span>\n                    </button>\n                    <input\n                        className={css.input}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies\"\n                        onChange={handleChange}\n                        value={query}\n                    />\n                </form>\n            </header>\n        )\n}","import { useState, useEffect, useRef} from \"react\"\nimport * as API from '../../services/movies-api'\nimport { SearchBar } from \"../../components/SearchBar/SearchBar\"\nimport {Link, useSearchParams, useLocation} from 'react-router-dom'\nimport css from '../HomePage/HomePage.module.css'\n\nconst Movies = () =>{\n    const [searchResult, setSearchResult] = useState(null)\n    const effectRun = useRef(false)\n    const [searchParams, setSearchParams] = useSearchParams();\n    const q = searchParams.get('q')\n    const location = useLocation()\n\n    useEffect(() => {\n        const getMovie = async () =>{\n           if(effectRun.current){\n               try{\n                    if(q == null){\n                        return\n                    }\n                   const fetchedMovie = await API.searchMovies(q)\n                   setSearchResult(fetchedMovie)\n               }\n               catch(error){alert('error')}\n           }\n           effectRun.current = true\n        }\n        getMovie()\n       }, [q])\n\n    const formHandler = ({ query }) => {\n        setSearchParams({q: query})\n      }\n\n    \n    return ( \n        <div>\n            <SearchBar onSubmit={formHandler}/>\n            <ul className={css.moviesList}>\n                {searchResult ? searchResult.map(movie => {\n                    return(\n                     <Link key={movie.id} to={`${movie.id}`} state={{from: location}}>\n                        <li>\n                            <img src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`} alt={movie.title}/>\n                        </li>\n                    </Link>)\n                }): <h1 className={css.title}>Search for Movies</h1>}\n            </ul>   \n        </div>)\n}   \n\nexport default Movies\n\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"HomePage_moviesList__8MbkQ\",\"homepageTitle\":\"HomePage_homepageTitle__skCb+\",\"title\":\"HomePage_title__UFLA3\"};"],"names":["SearchBar","_ref","onSubmit","query","setQuery","useState","_jsx","children","_jsxs","className","css","e","preventDefault","alert","type","autoComplete","autoFocus","placeholder","onChange","target","value","Movies","searchResult","setSearchResult","effectRun","useRef","searchParams","setSearchParams","useSearchParams","q","get","location","useLocation","useEffect","async","current","fetchedMovie","API","error","getMovie","moviesList","map","movie","Link","to","concat","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}