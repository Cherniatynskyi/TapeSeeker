{"version":3,"file":"static/js/642.5c3660c5.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"formButton\":\"SearchBar_formButton__C-ydM\",\"input\":\"SearchBar_input__bIy50\"};","import { useState } from \"react\";\nimport css from './SearchBar.module.css'\nimport Notiflix from 'notiflix';\n\nexport const SearchBar = ({onSubmit}) => {\n    const [query, setQuery] = useState('')\n\n    const handleChange = (e) => {\n        setQuery(e.target.value)\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (!query) {\n        Notiflix.Notify.failure('Enter your search term')\n        return\n    }\n        onSubmit({query})\n    }\n\n  \n        return (\n            <header >\n                <form className={css.form} onSubmit={handleSubmit}>\n                    <button className={css.formButton} type=\"submit\">\n                    <span>Search</span>\n                    </button>\n                    <input\n                        className={css.input}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies\"\n                        onChange={handleChange}\n                        value={query}\n                    />\n                </form>\n            </header>\n        )\n}","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"title\":\"MoviesList_title__PB2c8\",\"moviesListItem\":\"MoviesList_moviesListItem__OFqms\",\"img\":\"MoviesList_img__v4jFC\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\",\"thumbsContainer\":\"MoviesList_thumbsContainer__8kNDv\",\"thumb\":\"MoviesList_thumb__xQkCm\"};","import css from './MoviesList.module.css'\nimport {Link} from 'react-router-dom'\nimport { CiCalendarDate } from \"react-icons/ci\";\nimport { MdStar } from \"react-icons/md\";\nimport { MdLanguage } from \"react-icons/md\";\n\nexport const MoviesList = ({movies, location}) =>{\n\n    return (<ul className={css.moviesList}>\n        {movies ? movies.map(movie => {\n            if(movie.release_date){\n                var splitted = movie.release_date.split(\"-\")   \n            }\n            return(\n             <Link className={css.moviesListItem} key={movie.id} to={location.pathname === '/' ? `movies/${movie.id}`: `${movie.id}`} state={{from: location}}>\n                <li>\n                    <img className={css.img} src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`: 'https://eticketsolutions.com/demo/themes/e-ticket/img/movie.jpg'} alt={movie.title}/>\n                    <p className={css.movieTitle} >{movie.title ? movie.title : movie.name}</p>\n                        <div className={css.thumbsContainer}>\n                            <span className={css.thumb}> <CiCalendarDate size=\"1.2em\" /> {splitted ? splitted[0] : '2023'}</span>\n                            <span className={css.thumb}> <MdStar size=\"1.2em\" />{movie.vote_average.toFixed(1)}</span>\n                            <span className={css.thumb}> <MdLanguage size=\"1.2em\" />{movie.original_language}</span>\n                        </div>\n                </li>\n            </Link>)\n        }): <h1 className={css.title}>Search for Movies</h1>}\n    </ul>  )\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"loadButton\":\"Movies_loadButton__M-KkQ\",\"backToTopButton\":\"Movies_backToTopButton__7yEpE\"};","import { useState, useEffect} from \"react\"\nimport * as API from '../../services/movies-api'\nimport { SearchBar } from \"../../components/SearchBar/SearchBar\"\nimport {useSearchParams, useLocation} from 'react-router-dom'\nimport { MoviesList } from \"components/MoviesList/MoviesList\"\nimport css from './Movies.module.css'\nimport Notiflix from 'notiflix';\nimport { FaArrowUp } from \"react-icons/fa\";\n\nconst Movies = () =>{\n    const [searchResult, setSearchResult] = useState(null)\n    const [page, setPage] = useState(1)\n    const location = useLocation()\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    \n    useEffect(() => {\n        const q = searchParams.get('q')    \n                const getMoviesList = async()=>{\n                    try{   \n                        const fetchedMovie = await API.getMoviesList(`/movie/popular`, page)         \n                        setSearchResult(prevState => prevState ? [...prevState, ...fetchedMovie] : fetchedMovie)\n              \n                    }\n                    catch(error){Notiflix.Notify.failure('Error')}\n                }\n                const getMoviesByQuery = async(q) =>{  \n                    try{\n                        const fetchedMovie = await API.searchMovies(q, page)\n                        setSearchResult(prevState => prevState? [...prevState, ...fetchedMovie] : fetchedMovie)\n                        console.log(\"Fetched\")\n                    }\n                    catch(error){Notiflix.Notify.failure('Error')}\n                }\n                if(!q){\n                    getMoviesList()\n                    console.log(q)\n                    return\n                }\n                getMoviesByQuery(q)\n       }, [searchParams, page])\n\n    const onBackToTop = () =>{\n        window.scrollTo({top: 0, left: 0, behavior: \"smooth\",});\n    }\n    \n    const formHandler = ({ query }) => {\n        setPage(1)\n        setSearchParams({q: query})\n        setSearchResult(null)\n    }\n\n    const handlePageChange = () =>{\n        setPage(prev => prev+1)\n    }\n    \n    return ( \n        <div>\n            <SearchBar onSubmit={formHandler}/>\n            <MoviesList movies={searchResult} location={location}/> \n            <button className={css.loadButton} onClick={handlePageChange}>load more</button>\n            <button onClick={onBackToTop} className={css.backToTopButton}><FaArrowUp size=\"2em\"/></button>\n        </div>)\n}   \n\nexport default Movies\n\n","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'f331f91cb9692f1df13f3cba648b2743'\n\nexport const getMovies = async (type) =>{\n    const trendMovies = await axios({ url: `${BASE_URL}${type}?api_key=${API_KEY}`, method: \"GET\" })\n    return trendMovies.data.results;\n\n}\n\nexport const getMoviesList = async (type , page) =>{\n    const movieList = await axios({ url: `${BASE_URL}${type}?api_key=${API_KEY}&page=${page}`, method: \"GET\" })\n    return movieList.data.results;\n\n}\n\nexport const getMovieDetails = async(movieId, type) => {\n    const response = await axios({ url: `${BASE_URL}/movie/${movieId}${type}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data\n}\n\nexport const searchMovies = async(query, page) => {\n    const response = await axios({ url: `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`, method: \"GET\" })\n    return response.data.results\n}\n\n"],"names":["SearchBar","_ref","onSubmit","query","setQuery","useState","_jsx","children","_jsxs","className","css","e","preventDefault","Notiflix","failure","type","autoComplete","autoFocus","placeholder","onChange","target","value","MoviesList","movies","location","map","movie","release_date","splitted","split","Link","to","pathname","concat","id","state","from","src","poster_path","alt","title","name","CiCalendarDate","size","MdStar","vote_average","toFixed","MdLanguage","original_language","Movies","searchResult","setSearchResult","page","setPage","useLocation","searchParams","setSearchParams","useSearchParams","useEffect","q","get","async","fetchedMovie","API","prevState","error","getMoviesList","console","log","getMoviesByQuery","onClick","handlePageChange","prev","onBackToTop","window","scrollTo","top","left","behavior","FaArrowUp","BASE_URL","API_KEY","getMovies","axios","url","method","data","results","getMovieDetails","movieId","searchMovies"],"sourceRoot":""}