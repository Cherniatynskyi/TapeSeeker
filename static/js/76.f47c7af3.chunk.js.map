{"version":3,"file":"static/js/76.f47c7af3.chunk.js","mappings":"gMACA,QAAkC,8BAAlC,EAA6E,yB,aCM7E,MAsCA,EAtCaA,KACT,MAAM,QAACC,IAAWC,EAAAA,EAAAA,OACXC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,MAC3BC,GAAYC,EAAAA,EAAAA,SAAO,GAmBzB,OAjBAC,EAAAA,EAAAA,YAAU,KACWC,WACd,GAAGH,EAAUI,QAET,IACI,MAAMC,QAAqBC,EAAAA,GAAoBX,EAAS,YAExDG,EAAQO,EAAaR,KACzB,CACA,MAAMU,GAAOC,MAAM,QAAQ,CAE/BR,EAAUI,SAAU,CAAK,EAE5BK,EAAU,GACR,CAACd,KAGCe,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACCf,IAAQa,EAAAA,EAAAA,KAAA,OAAAE,SACQ,IAAhBf,EAAKgB,QAAeH,EAAAA,EAAAA,KAAA,MAAII,UAAWC,EAAoBH,SACnDf,EAAKmB,KAAIC,IAEDC,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACGF,EAAAA,EAAAA,KAAA,KAAAE,SAAIK,EAAME,QACVT,EAAAA,EAAAA,KAAA,OAAKU,MAAM,MAAMC,OAAO,MAAMC,IAAKL,EAAMM,aAAY,kCAAAC,OAAqCP,EAAMM,cAAiB,yEAA0EE,IAAKR,EAAME,SAFhMF,EAAMS,SAKpBhB,EAAAA,EAAAA,KAAA,KAAGI,UAAWC,EAAeH,SAAC,eAE3C,C,mECvCP,MAAMe,EAAW,+BACXC,EAAU,mCAGHC,EAAiB1B,gBACH2B,EAAAA,EAAAA,GAAM,CAAEC,IAAI,GAADP,OAAKG,GAAQH,OAHjC,oBAG6C,aAAAA,OAAYI,GAAWI,OAAQ,SAC1EC,KAAKC,QAGZC,EAAkBhC,MAAMR,EAASyC,WACnBN,EAAAA,EAAAA,GAAM,CAAEC,IAAI,GAADP,OAAKG,EAAQ,WAAAH,OAAU7B,GAAO6B,OAAGY,EAAI,aAAAZ,OAAYI,GAAWI,OAAQ,SACtFC,KAGPI,EAAelC,gBACD2B,EAAAA,EAAAA,GAAM,CAAEC,IAAI,GAADP,OAAKG,EAAQ,0BAAAH,OAAyBI,EAAO,WAAAJ,OAAUc,GAASN,OAAQ,SAC1FC,KAAKC,O","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorsContainer\":\"Cast_actorsContainer__CmOqS\",\"errorTitle\":\"Cast_errorTitle__lv-AY\"};","import { useParams } from \"react-router-dom\"\nimport { useState, useEffect, useRef } from \"react\"\nimport * as API from '../../services/movies-api'\n\nimport css from './Cast.module.css'\n\n\nconst Cast = () =>{\n    const {movieId} = useParams()\n    const [cast, setCast] = useState(null)\n    const effectRun = useRef(true)\n\n    useEffect(() => {\n        const getMovie = async () =>{\n           if(effectRun.current){\n               \n               try{\n                   const fetchedMovie = await API.getMovieDetails(movieId, '/credits')\n                //    console.log(fetchedMovie)\n                   setCast(fetchedMovie.cast)\n               }\n               catch(error){alert('error')}\n           }\n           effectRun.current = false\n        }\n        getMovie()\n       }, [movieId])\n\n    \n    return (<>\n            {cast && <div>\n            {cast.length !== 0 ? <ul className={css.actorsContainer}>\n                {cast.map(actor => { \n                        return (\n                         <li key={actor.id}>\n                            <p>{actor.name}</p>\n                            <img width='200' height='300' src={actor.profile_path ? `https://image.tmdb.org/t/p/w200${actor.profile_path}` : 'https://cdn.pixabay.com/photo/2016/04/01/10/11/avatar-1299805_1280.png'} alt={actor.name}/>\n                        </li>)    \n                })}\n            </ul> : <p className={css.errorTitle}>No cast</p>}\n        </div>}\n    </>)\n}   \n\n\nexport default Cast\n","import axios from 'axios'\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'f331f91cb9692f1df13f3cba648b2743'\nconst TRAND_URL = '/trending/all/day'\n\nexport const getTrandMovies = async () => {\n    const response = await axios({ url: `${BASE_URL}${TRAND_URL}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data.results\n}\n\nexport const getMovieDetails = async(movieId, type) => {\n    const response = await axios({ url: `${BASE_URL}/movie/${movieId}${type}?api_key=${API_KEY}`, method: \"GET\" })\n    return response.data\n}\n\nexport const searchMovies = async(query) => {\n    const response = await axios({ url: `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`, method: \"GET\" })\n    return response.data.results\n}"],"names":["Cast","movieId","useParams","cast","setCast","useState","effectRun","useRef","useEffect","async","current","fetchedMovie","API","error","alert","getMovie","_jsx","_Fragment","children","length","className","css","map","actor","_jsxs","name","width","height","src","profile_path","concat","alt","id","BASE_URL","API_KEY","getTrandMovies","axios","url","method","data","results","getMovieDetails","type","searchMovies","query"],"sourceRoot":""}